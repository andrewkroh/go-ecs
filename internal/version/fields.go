// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by generator, DO NOT EDIT.

package version

// f contains a list of fields from all ECS versions.
// Fields are defined multiple times when the definition changes between versions.
var f = [...]Field{
	// ECS v1.0.1
	{Name: "@timestamp", DataType: "date", Description: "Date/time when the event originated.\nThis is the date/time extracted from the event, typically representing when the event was generated by the source.\nIf the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.\nRequired field for all events."},
	{Name: "agent.ephemeral_id", DataType: "keyword", Description: "Ephemeral identifier of this agent (if one exists).\nThis id normally changes across restarts, but `agent.id` does not."},
	{Name: "agent.id", DataType: "keyword", Description: "Unique identifier of this agent (if one exists).\nExample: For Beats this would be beat.id."},
	{Name: "agent.name", DataType: "keyword", Description: "Custom name of the agent.\nThis is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.\nIf no name is given, the name is often left empty."},
	{Name: "agent.type", DataType: "keyword", Description: "Type of the agent.\nThe agent type stays always the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine."},
	{Name: "agent.version", DataType: "keyword", Description: "Version of the agent."},
	{Name: "client.address", DataType: "keyword", Description: "Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is."},
	{Name: "client.bytes", DataType: "long", Description: "Bytes sent from the client to the server."},
	{Name: "client.domain", DataType: "keyword", Description: "Client domain."},
	{Name: "client.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "client.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "client.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "client.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "client.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "client.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "client.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "client.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "client.ip", DataType: "ip", Description: "IP address of the client.\nCan be one or multiple IPv4 or IPv6 addresses."},
	{Name: "client.mac", DataType: "keyword", Description: "MAC address of the client."},
	{Name: "client.packets", DataType: "long", Description: "Packets sent from the client to the server."},
	{Name: "client.port", DataType: "long", Description: "Port of the client."},
	{Name: "client.user.email", DataType: "keyword", Description: "User email address."},
	{Name: "client.user.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "client.user.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "client.user.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "client.user.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "client.user.id", DataType: "keyword", Description: "One or multiple unique identifiers of the user."},
	{Name: "client.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "cloud.account.id", DataType: "keyword", Description: "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier."},
	{Name: "cloud.availability_zone", DataType: "keyword", Description: "Availability zone in which this host is running."},
	{Name: "cloud.instance.id", DataType: "keyword", Description: "Instance ID of the host machine."},
	{Name: "cloud.instance.name", DataType: "keyword", Description: "Instance name of the host machine."},
	{Name: "cloud.machine.type", DataType: "keyword", Description: "Machine type of the host machine."},
	{Name: "cloud.provider", DataType: "keyword", Description: "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean."},
	{Name: "cloud.region", DataType: "keyword", Description: "Region in which this host is running."},
	{Name: "container.id", DataType: "keyword", Description: "Unique container id."},
	{Name: "container.image.name", DataType: "keyword", Description: "Name of the image the container was built on."},
	{Name: "container.image.tag", DataType: "keyword", Description: "Container image tag."},
	{Name: "container.labels", DataType: "object", Description: "Image labels."},
	{Name: "container.name", DataType: "keyword", Description: "Container name."},
	{Name: "container.runtime", DataType: "keyword", Description: "Runtime managing this container."},
	{Name: "destination.address", DataType: "keyword", Description: "Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is."},
	{Name: "destination.bytes", DataType: "long", Description: "Bytes sent from the destination to the source."},
	{Name: "destination.domain", DataType: "keyword", Description: "Destination domain."},
	{Name: "destination.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "destination.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "destination.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "destination.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "destination.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "destination.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "destination.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "destination.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "destination.ip", DataType: "ip", Description: "IP address of the destination.\nCan be one or multiple IPv4 or IPv6 addresses."},
	{Name: "destination.mac", DataType: "keyword", Description: "MAC address of the destination."},
	{Name: "destination.packets", DataType: "long", Description: "Packets sent from the destination to the source."},
	{Name: "destination.port", DataType: "long", Description: "Port of the destination."},
	{Name: "destination.user.email", DataType: "keyword", Description: "User email address."},
	{Name: "destination.user.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "destination.user.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "destination.user.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "destination.user.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "destination.user.id", DataType: "keyword", Description: "One or multiple unique identifiers of the user."},
	{Name: "destination.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "ecs.version", DataType: "keyword", Description: "ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.\nWhen querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events."},
	{Name: "error.code", DataType: "keyword", Description: "Error code describing the error."},
	{Name: "error.id", DataType: "keyword", Description: "Unique identifier for the error."},
	{Name: "error.message", DataType: "text", Description: "Error message."},
	{Name: "event.action", DataType: "keyword", Description: "The action captured by the event.\nThis describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer."},
	{Name: "event.category", DataType: "keyword", Description: "Event category.\nThis contains high-level information about the contents of the event. It is more generic than `event.action`, in the sense that typically a category contains multiple actions. Warning: In future versions of ECS, we plan to provide a list of acceptable values for this field, please use with caution."},
	{Name: "event.created", DataType: "date", Description: "event.created contains the date/time when the event was first read by an agent, or by your pipeline.\nThis field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.\nIn most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.\nIn case the two timestamps are identical, @timestamp should be used."},
	{Name: "event.dataset", DataType: "keyword", Description: "Name of the dataset.\nThe concept of a `dataset` (fileset / metricset) is used in Beats as a subset of modules. It contains the information which is currently stored in metricset.name and metricset.module or fileset.name."},
	{Name: "event.duration", DataType: "long", Description: "Duration of the event in nanoseconds.\nIf event.start and event.end are known this value should be the difference between the end and start time."},
	{Name: "event.end", DataType: "date", Description: "event.end contains the date when the event ended or when the activity was last observed."},
	{Name: "event.hash", DataType: "keyword", Description: "Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity."},
	{Name: "event.id", DataType: "keyword", Description: "Unique ID to describe the event."},
	{Name: "event.kind", DataType: "keyword", Description: "The kind of the event.\nThis gives information about what type of information the event contains, without being specific to the contents of the event.  Examples are `event`, `state`, `alarm`. Warning: In future versions of ECS, we plan to provide a list of acceptable values for this field, please use with caution."},
	{Name: "event.module", DataType: "keyword", Description: "Name of the module this data is coming from.\nThis information is coming from the modules used in Beats or Logstash."},
	{Name: "event.original", DataType: "keyword", Description: "Raw text message of entire event. Used to demonstrate log integrity.\nThis field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`."},
	{Name: "event.outcome", DataType: "keyword", Description: "The outcome of the event.\nIf the event describes an action, this fields contains the outcome of that action. Examples outcomes are `success` and `failure`. Warning: In future versions of ECS, we plan to provide a list of acceptable values for this field, please use with caution."},
	{Name: "event.risk_score", DataType: "float", Description: "Risk score or priority of the event (e.g. security solutions). Use your system's original value here."},
	{Name: "event.risk_score_norm", DataType: "float", Description: "Normalized risk score or priority of the event, on a scale of 0 to 100.\nThis is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems."},
	{Name: "event.severity", DataType: "long", Description: "Severity describes the original severity of the event. What the different severity values mean can very different between use cases. It's up to the implementer to make sure severities are consistent across events."},
	{Name: "event.start", DataType: "date", Description: "event.start contains the date when the event started or when the activity was first observed."},
	{Name: "event.timezone", DataType: "keyword", Description: "This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise.\nAcceptable timezone formats are: a canonical ID (e.g. \"Europe/Amsterdam\"), abbreviated (e.g. \"EST\") or an HH:mm differential (e.g. \"-05:00\")."},
	{Name: "event.type", DataType: "keyword", Description: "Reserved for future usage.\nPlease avoid using this field for user data."},
	{Name: "file.ctime", DataType: "date", Description: "Last time file metadata changed."},
	{Name: "file.device", DataType: "keyword", Description: "Device that is the source of the file."},
	{Name: "file.extension", DataType: "keyword", Description: "File extension.\nThis should allow easy filtering by file extensions."},
	{Name: "file.gid", DataType: "keyword", Description: "Primary group ID (GID) of the file."},
	{Name: "file.group", DataType: "keyword", Description: "Primary group name of the file."},
	{Name: "file.inode", DataType: "keyword", Description: "Inode representing the file in the filesystem."},
	{Name: "file.mode", DataType: "keyword", Description: "Mode of the file in octal representation."},
	{Name: "file.mtime", DataType: "date", Description: "Last time file content was modified."},
	{Name: "file.owner", DataType: "keyword", Description: "File owner's username."},
	{Name: "file.path", DataType: "keyword", Description: "Path to the file."},
	{Name: "file.size", DataType: "long", Description: "File size in bytes (field is only added when `type` is `file`)."},
	{Name: "file.target_path", DataType: "keyword", Description: "Target path for symlinks."},
	{Name: "file.type", DataType: "keyword", Description: "File type (file, dir, or symlink)."},
	{Name: "file.uid", DataType: "keyword", Description: "The user ID (UID) or security identifier (SID) of the file owner."},
	{Name: "geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "host.architecture", DataType: "keyword", Description: "Operating system architecture."},
	{Name: "host.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "host.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "host.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "host.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "host.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "host.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "host.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "host.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "host.hostname", DataType: "keyword", Description: "Hostname of the host.\nIt normally contains what the `hostname` command returns on the host machine."},
	{Name: "host.id", DataType: "keyword", Description: "Unique host id.\nAs hostname is not always unique, use values that are meaningful in your environment.\nExample: The current usage of `beat.name`."},
	{Name: "host.ip", DataType: "ip", Description: "Host ip address."},
	{Name: "host.mac", DataType: "keyword", Description: "Host mac address."},
	{Name: "host.name", DataType: "keyword", Description: "Name of the host.\nIt can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use."},
	{Name: "host.os.family", DataType: "keyword", Description: "OS family (such as redhat, debian, freebsd, windows)."},
	{Name: "host.os.full", DataType: "keyword", Description: "Operating system name, including the version or code name."},
	{Name: "host.os.kernel", DataType: "keyword", Description: "Operating system kernel version as a raw string."},
	{Name: "host.os.name", DataType: "keyword", Description: "Operating system name, without the version."},
	{Name: "host.os.platform", DataType: "keyword", Description: "Operating system platform (such centos, ubuntu, windows)."},
	{Name: "host.os.version", DataType: "keyword", Description: "Operating system version as a raw string."},
	{Name: "host.type", DataType: "keyword", Description: "Type of host.\nFor Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment."},
	{Name: "host.user.email", DataType: "keyword", Description: "User email address."},
	{Name: "host.user.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "host.user.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "host.user.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "host.user.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "host.user.id", DataType: "keyword", Description: "One or multiple unique identifiers of the user."},
	{Name: "host.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "http.request.body.bytes", DataType: "long", Description: "Size in bytes of the request body."},
	{Name: "http.request.body.content", DataType: "keyword", Description: "The full HTTP request body."},
	{Name: "http.request.bytes", DataType: "long", Description: "Total size in bytes of the request (body and headers)."},
	{Name: "http.request.method", DataType: "keyword", Description: "HTTP request method.\nThe field value must be normalized to lowercase for querying. See the documentation section \"Implementing ECS\"."},
	{Name: "http.request.referrer", DataType: "keyword", Description: "Referrer for this HTTP request."},
	{Name: "http.response.body.bytes", DataType: "long", Description: "Size in bytes of the response body."},
	{Name: "http.response.body.content", DataType: "keyword", Description: "The full HTTP response body."},
	{Name: "http.response.bytes", DataType: "long", Description: "Total size in bytes of the response (body and headers)."},
	{Name: "http.response.status_code", DataType: "long", Description: "HTTP response status code."},
	{Name: "http.version", DataType: "keyword", Description: "HTTP version."},
	{Name: "labels", DataType: "object", Description: "Custom key/value pairs.\nCan be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.\nExample: `docker` and `k8s` labels."},
	{Name: "log.level", DataType: "keyword", Description: "Original log level of the log event.\nSome examples are `warn`, `error`, `i`."},
	{Name: "log.original", DataType: "keyword", Description: "This is the original log message and contains the full log message before splitting it up in multiple parts.\nIn contrast to the `message` field which can contain an extracted part of the log message, this field contains the original, full log message. It can have already some modifications applied like encoding or new lines removed to clean up the log message.\nThis field is not indexed and doc_values are disabled so it can't be queried but the value can be retrieved from `_source`."},
	{Name: "message", DataType: "text", Description: "For log events the message field contains the log message, optimized for viewing in a log viewer.\nFor structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.\nIf multiple messages exist, they can be combined into one message."},
	{Name: "network.application", DataType: "keyword", Description: "A name given to an application level protocol. This can be arbitrarily assigned for things like microservices, but also apply to things like skype, icq, facebook, twitter. This would be used in situations where the vendor or service can be decoded such as from the source/dest IP owners, ports, or wire format.\nThe field value must be normalized to lowercase for querying. See the documentation section \"Implementing ECS\"."},
	{Name: "network.bytes", DataType: "long", Description: "Total bytes transferred in both directions.\nIf `source.bytes` and `destination.bytes` are known, `network.bytes` is their sum."},
	{Name: "network.community_id", DataType: "keyword", Description: "A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows.\nLearn more at https://github.com/corelight/community-id-spec."},
	{Name: "network.direction", DataType: "keyword", Description: "Direction of the network traffic.\nRecommended values are:\n  * inbound\n  * outbound\n  * internal\n  * external\n  * unknown\n\nWhen mapping events from a host-based monitoring context, populate this field from the host's point of view.\nWhen mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of your network perimeter."},
	{Name: "network.forwarded_ip", DataType: "ip", Description: "Host IP address when the source IP address is the proxy."},
	{Name: "network.iana_number", DataType: "keyword", Description: "IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number."},
	{Name: "network.name", DataType: "keyword", Description: "Name given by operators to sections of their network."},
	{Name: "network.packets", DataType: "long", Description: "Total packets transferred in both directions.\nIf `source.packets` and `destination.packets` are known, `network.packets` is their sum."},
	{Name: "network.protocol", DataType: "keyword", Description: "L7 Network protocol name. ex. http, lumberjack, transport protocol.\nThe field value must be normalized to lowercase for querying. See the documentation section \"Implementing ECS\"."},
	{Name: "network.transport", DataType: "keyword", Description: "Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)\nThe field value must be normalized to lowercase for querying. See the documentation section \"Implementing ECS\"."},
	{Name: "network.type", DataType: "keyword", Description: "In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc\nThe field value must be normalized to lowercase for querying. See the documentation section \"Implementing ECS\"."},
	{Name: "observer.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "observer.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "observer.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "observer.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "observer.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "observer.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "observer.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "observer.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "observer.hostname", DataType: "keyword", Description: "Hostname of the observer."},
	{Name: "observer.ip", DataType: "ip", Description: "IP address of the observer."},
	{Name: "observer.mac", DataType: "keyword", Description: "MAC address of the observer"},
	{Name: "observer.os.family", DataType: "keyword", Description: "OS family (such as redhat, debian, freebsd, windows)."},
	{Name: "observer.os.full", DataType: "keyword", Description: "Operating system name, including the version or code name."},
	{Name: "observer.os.kernel", DataType: "keyword", Description: "Operating system kernel version as a raw string."},
	{Name: "observer.os.name", DataType: "keyword", Description: "Operating system name, without the version."},
	{Name: "observer.os.platform", DataType: "keyword", Description: "Operating system platform (such centos, ubuntu, windows)."},
	{Name: "observer.os.version", DataType: "keyword", Description: "Operating system version as a raw string."},
	{Name: "observer.serial_number", DataType: "keyword", Description: "Observer serial number."},
	{Name: "observer.type", DataType: "keyword", Description: "The type of the observer the data is coming from.\nThere is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`."},
	{Name: "observer.vendor", DataType: "keyword", Description: "observer vendor information."},
	{Name: "observer.version", DataType: "keyword", Description: "Observer version."},
	{Name: "organization.id", DataType: "keyword", Description: "Unique identifier for the organization."},
	{Name: "organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "os.family", DataType: "keyword", Description: "OS family (such as redhat, debian, freebsd, windows)."},
	{Name: "os.full", DataType: "keyword", Description: "Operating system name, including the version or code name."},
	{Name: "os.kernel", DataType: "keyword", Description: "Operating system kernel version as a raw string."},
	{Name: "os.name", DataType: "keyword", Description: "Operating system name, without the version."},
	{Name: "os.platform", DataType: "keyword", Description: "Operating system platform (such centos, ubuntu, windows)."},
	{Name: "os.version", DataType: "keyword", Description: "Operating system version as a raw string."},
	{Name: "process.args", DataType: "keyword", Description: "Array of process arguments.\nMay be filtered to protect sensitive information."},
	{Name: "process.executable", DataType: "keyword", Description: "Absolute path to the process executable."},
	{Name: "process.name", DataType: "keyword", Description: "Process name.\nSometimes called program name or similar."},
	{Name: "process.pid", DataType: "long", Description: "Process id."},
	{Name: "process.ppid", DataType: "long", Description: "Parent process' pid."},
	{Name: "process.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.thread.id", DataType: "long", Description: "Thread ID."},
	{Name: "process.title", DataType: "keyword", Description: "Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened."},
	{Name: "process.working_directory", DataType: "keyword", Description: "The working directory of the process."},
	{Name: "related.ip", DataType: "ip", Description: "All of the IPs seen on your event."},
	{Name: "server.address", DataType: "keyword", Description: "Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is."},
	{Name: "server.bytes", DataType: "long", Description: "Bytes sent from the server to the client."},
	{Name: "server.domain", DataType: "keyword", Description: "Server domain."},
	{Name: "server.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "server.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "server.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "server.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "server.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "server.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "server.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "server.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "server.ip", DataType: "ip", Description: "IP address of the server.\nCan be one or multiple IPv4 or IPv6 addresses."},
	{Name: "server.mac", DataType: "keyword", Description: "MAC address of the server."},
	{Name: "server.packets", DataType: "long", Description: "Packets sent from the server to the client."},
	{Name: "server.port", DataType: "long", Description: "Port of the server."},
	{Name: "server.user.email", DataType: "keyword", Description: "User email address."},
	{Name: "server.user.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "server.user.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "server.user.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "server.user.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "server.user.id", DataType: "keyword", Description: "One or multiple unique identifiers of the user."},
	{Name: "server.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "service.ephemeral_id", DataType: "keyword", Description: "Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not."},
	{Name: "service.id", DataType: "keyword", Description: "Unique identifier of the running service.\nThis id should uniquely identify this service. This makes it possible to correlate logs and metrics for one specific service.\nExample: If you are experiencing issues with one redis instance, you can filter on that id to see metrics and logs for that single instance."},
	{Name: "service.name", DataType: "keyword", Description: "Name of the service data is collected from.\nThe name of the service is normally user given. This allows if two instances of the same service are running on the same machine they can be differentiated by the `service.name`.\nAlso it allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the service.name could contain the cluster name. For Beats the service.name is by default a copy of the `service.type` field if no name is specified."},
	{Name: "service.state", DataType: "keyword", Description: "Current state of the service."},
	{Name: "service.type", DataType: "keyword", Description: "The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`."},
	{Name: "service.version", DataType: "keyword", Description: "Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service."},
	{Name: "source.address", DataType: "keyword", Description: "Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is."},
	{Name: "source.bytes", DataType: "long", Description: "Bytes sent from the source to the destination."},
	{Name: "source.domain", DataType: "keyword", Description: "Source domain."},
	{Name: "source.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "source.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "source.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "source.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "source.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "source.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "source.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "source.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "source.ip", DataType: "ip", Description: "IP address of the source.\nCan be one or multiple IPv4 or IPv6 addresses."},
	{Name: "source.mac", DataType: "keyword", Description: "MAC address of the source."},
	{Name: "source.packets", DataType: "long", Description: "Packets sent from the source to the destination."},
	{Name: "source.port", DataType: "long", Description: "Port of the source."},
	{Name: "source.user.email", DataType: "keyword", Description: "User email address."},
	{Name: "source.user.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "source.user.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "source.user.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "source.user.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "source.user.id", DataType: "keyword", Description: "One or multiple unique identifiers of the user."},
	{Name: "source.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "tags", DataType: "keyword", Description: "List of keywords used to tag each event."},
	{Name: "url.domain", DataType: "keyword", Description: "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field."},
	{Name: "url.fragment", DataType: "keyword", Description: "Portion of the url after the `#`, such as \"top\".\nThe `#` is not part of the fragment."},
	{Name: "url.full", DataType: "keyword", Description: "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source."},
	{Name: "url.original", DataType: "keyword", Description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."},
	{Name: "url.password", DataType: "keyword", Description: "Password of the request."},
	{Name: "url.path", DataType: "keyword", Description: "Path of the request, such as \"/search\"."},
	{Name: "url.port", DataType: "long", Description: "Port of the request, such as 443."},
	{Name: "url.query", DataType: "keyword", Description: "The query field describes the query string of the request, such as \"q=elasticsearch\".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases."},
	{Name: "url.scheme", DataType: "keyword", Description: "Scheme of the request, such as \"https\".\nNote: The `:` is not part of the scheme."},
	{Name: "url.username", DataType: "keyword", Description: "Username of the request."},
	{Name: "user.email", DataType: "keyword", Description: "User email address."},
	{Name: "user.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "user.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "user.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "user.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "user.id", DataType: "keyword", Description: "One or multiple unique identifiers of the user."},
	{Name: "user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "user_agent.device.name", DataType: "keyword", Description: "Name of the device."},
	{Name: "user_agent.name", DataType: "keyword", Description: "Name of the user agent."},
	{Name: "user_agent.original", DataType: "keyword", Description: "Unparsed version of the user_agent."},
	{Name: "user_agent.os.family", DataType: "keyword", Description: "OS family (such as redhat, debian, freebsd, windows)."},
	{Name: "user_agent.os.full", DataType: "keyword", Description: "Operating system name, including the version or code name."},
	{Name: "user_agent.os.kernel", DataType: "keyword", Description: "Operating system kernel version as a raw string."},
	{Name: "user_agent.os.name", DataType: "keyword", Description: "Operating system name, without the version."},
	{Name: "user_agent.os.platform", DataType: "keyword", Description: "Operating system platform (such centos, ubuntu, windows)."},
	{Name: "user_agent.os.version", DataType: "keyword", Description: "Operating system version as a raw string."},
	{Name: "user_agent.version", DataType: "keyword", Description: "Version of the user agent."},
	// ECS v1.1.0
	{Name: "as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "client.as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "client.as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "client.nat.ip", DataType: "ip", Description: "Translated IP of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers."},
	{Name: "client.nat.port", DataType: "long", Description: "Translated port of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers."},
	{Name: "client.user.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "destination.as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "destination.as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "destination.nat.ip", DataType: "ip", Description: "Translated ip of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers."},
	{Name: "destination.nat.port", DataType: "long", Description: "Port the source session is translated to by NAT Device.\nTypically used with load balancers, firewalls, or routers."},
	{Name: "destination.user.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "dns.answers", DataType: "object", Description: "An array containing an object for each answer section returned by the server.\nThe main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.\nNot all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields."},
	{Name: "dns.answers.class", DataType: "keyword", Description: "The class of DNS data contained in this resource record."},
	{Name: "dns.answers.data", DataType: "keyword", Description: "The data describing the resource.\nThe meaning of this data depends on the type and class of the resource record."},
	{Name: "dns.answers.name", DataType: "keyword", Description: "The domain name to which this resource record pertains.\nIf a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated."},
	{Name: "dns.answers.ttl", DataType: "long", Description: "The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached."},
	{Name: "dns.answers.type", DataType: "keyword", Description: "The type of data contained in this resource record."},
	{Name: "dns.header_flags", DataType: "keyword", Description: "Array of 2 letter DNS header flags.\nExpected values are: AA, TC, RD, RA, AD, CD, DO."},
	{Name: "dns.id", DataType: "keyword", Description: "The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response."},
	{Name: "dns.op_code", DataType: "keyword", Description: "The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response."},
	{Name: "dns.question.class", DataType: "keyword", Description: "The class of of records being queried."},
	{Name: "dns.question.name", DataType: "keyword", Description: "The name being queried.\nIf the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \\t, \\r, and \\n respectively."},
	{Name: "dns.question.registered_domain", DataType: "keyword", Description: "The highest registered domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.google.com\" is \"google.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "dns.question.type", DataType: "keyword", Description: "The type of record being queried."},
	{Name: "dns.resolved_ip", DataType: "ip", Description: "Array containing all IPs seen in `answers.data`.\nThe `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for."},
	{Name: "dns.response_code", DataType: "keyword", Description: "The DNS response code."},
	{Name: "dns.type", DataType: "keyword", Description: "The type of DNS event captured, query or answer.\nIf your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.\nIf your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers."},
	{Name: "event.code", DataType: "keyword", Description: "Identification code for this event, if one exists.\nSome event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID."},
	{Name: "event.dataset", DataType: "keyword", Description: "Name of the dataset.\nIf an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.\nIt's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name."},
	{Name: "event.module", DataType: "keyword", Description: "Name of the module this data is coming from.\nIf your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module."},
	{Name: "event.provider", DataType: "keyword", Description: "Source of the event.\nEvent transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing)."},
	{Name: "event.sequence", DataType: "long", Description: "Sequence number of the event.\nThe sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regarless of the timestamp precision."},
	{Name: "file.accessed", DataType: "date", Description: "Last time the file was accessed.\nNote that not all filesystems keep track of access time."},
	{Name: "file.created", DataType: "date", Description: "File creation time.\nNote that not all filesystems store the creation time."},
	{Name: "file.ctime", DataType: "date", Description: "Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file."},
	{Name: "file.directory", DataType: "keyword", Description: "Directory where the file is located."},
	{Name: "file.extension", DataType: "keyword", Description: "File extension."},
	{Name: "file.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "file.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "file.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "file.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "file.mtime", DataType: "date", Description: "Last time the file content was modified."},
	{Name: "file.name", DataType: "keyword", Description: "Name of the file including the extension, without the directory."},
	{Name: "file.path", DataType: "keyword", Description: "Full path to the file."},
	{Name: "file.size", DataType: "long", Description: "File size in bytes.\nOnly relevant when `file.type` is \"file\"."},
	{Name: "hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "host.uptime", DataType: "long", Description: "Seconds the host has been up."},
	{Name: "host.user.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "log.logger", DataType: "keyword", Description: "The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name."},
	{Name: "process.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "process.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "process.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "process.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "process.pgid", DataType: "long", Description: "Identifier of the group of processes the process belongs to."},
	{Name: "process.thread.name", DataType: "keyword", Description: "Thread name."},
	{Name: "process.uptime", DataType: "long", Description: "Seconds the process has been up."},
	{Name: "server.as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "server.as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "server.nat.ip", DataType: "ip", Description: "Translated ip of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers."},
	{Name: "server.nat.port", DataType: "long", Description: "Translated port of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers."},
	{Name: "server.user.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "service.id", DataType: "keyword", Description: "Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead."},
	{Name: "source.as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "source.as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "source.nat.ip", DataType: "ip", Description: "Translated ip of source based NAT sessions (e.g. internal client to internet)\nTypically connections traversing load balancers, firewalls, or routers."},
	{Name: "source.nat.port", DataType: "long", Description: "Translated port of source based NAT sessions. (e.g. internal client to internet)\nTypically used with load balancers, firewalls, or routers."},
	{Name: "source.user.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "trace.id", DataType: "keyword", Description: "Unique identifier of the trace.\nA trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services."},
	{Name: "transaction.id", DataType: "keyword", Description: "Unique identifier of the transaction.\nA transaction is the highest level of work measured within a service, such as a request to a server."},
	{Name: "user.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	// ECS v1.2.0
	{Name: "client.registered_domain", DataType: "keyword", Description: "The highest registered client domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.google.com\" is \"google.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "client.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for google.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "client.user.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "destination.registered_domain", DataType: "keyword", Description: "The highest registered destination domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.google.com\" is \"google.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "destination.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for google.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "destination.user.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "dns.question.subdomain", DataType: "keyword", Description: "The subdomain is all of the labels under the registered_domain.\nIf the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "dns.question.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for google.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "error.stack_trace", DataType: "keyword", Description: "The stack trace of this error in plain text."},
	{Name: "error.type", DataType: "keyword", Description: "The type of the error, for example the class name of the exception."},
	{Name: "event.severity", DataType: "long", Description: "The numeric severity of the event according to your event source.\nWhat the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.\nThe Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`."},
	{Name: "group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "host.user.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "log.level", DataType: "keyword", Description: "Original log level of the log event.\nIf the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).\nSome examples are `warn`, `err`, `i`, `informational`."},
	{Name: "log.origin.file.line", DataType: "integer", Description: "The line number of the file containing the source code which originated the log event."},
	{Name: "log.origin.file.name", DataType: "keyword", Description: "The name of the file containing the source code which originated the log event. Note that this is not the name of the log file."},
	{Name: "log.origin.function", DataType: "keyword", Description: "The name of the function or method which originated the log event."},
	{Name: "log.syslog", DataType: "object", Description: "The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164."},
	{Name: "log.syslog.facility.code", DataType: "long", Description: "The Syslog numeric facility of the log event, if available.\nAccording to RFCs 5424 and 3164, this value should be an integer between 0 and 23."},
	{Name: "log.syslog.facility.name", DataType: "keyword", Description: "The Syslog text-based facility of the log event, if available."},
	{Name: "log.syslog.priority", DataType: "long", Description: "Syslog numeric priority of the event, if available.\nAccording to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191."},
	{Name: "log.syslog.severity.code", DataType: "long", Description: "The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`."},
	{Name: "log.syslog.severity.name", DataType: "keyword", Description: "The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different severity value (e.g. firewall, IDS), your source's text severity should go to `log.level`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `log.level`."},
	{Name: "observer.name", DataType: "keyword", Description: "Custom name of the observer.\nThis is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.\nIf no custom name is needed, the field can be left empty."},
	{Name: "observer.product", DataType: "keyword", Description: "The product name of the observer."},
	{Name: "observer.vendor", DataType: "keyword", Description: "Vendor name of the observer."},
	{Name: "package.architecture", DataType: "keyword", Description: "Package architecture."},
	{Name: "package.checksum", DataType: "keyword", Description: "Checksum of the installed package for verification."},
	{Name: "package.description", DataType: "keyword", Description: "Description of the package."},
	{Name: "package.install_scope", DataType: "keyword", Description: "Indicating how the package was installed, e.g. user-local, global."},
	{Name: "package.installed", DataType: "date", Description: "Time when package was installed."},
	{Name: "package.license", DataType: "keyword", Description: "License under which the package was released.\nUse a short name, e.g. the license identifier from SPDX License List where possible (https://spdx.org/licenses/)."},
	{Name: "package.name", DataType: "keyword", Description: "Package name"},
	{Name: "package.path", DataType: "keyword", Description: "Path where the package is installed."},
	{Name: "package.size", DataType: "long", Description: "Package size in bytes."},
	{Name: "package.version", DataType: "keyword", Description: "Package version"},
	{Name: "server.registered_domain", DataType: "keyword", Description: "The highest registered server domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.google.com\" is \"google.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "server.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for google.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "server.user.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "service.name", DataType: "keyword", Description: "Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified."},
	{Name: "service.node.name", DataType: "keyword", Description: "Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set."},
	{Name: "source.registered_domain", DataType: "keyword", Description: "The highest registered source domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.google.com\" is \"google.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "source.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for google.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "source.user.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "threat.framework", DataType: "keyword", Description: "Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat.   Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events."},
	{Name: "threat.tactic.id", DataType: "keyword", Description: "The id of tactic used by this threat. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.tactic.name", DataType: "keyword", Description: "Name of the type of tactic used by this threat. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.tactic.reference", DataType: "keyword", Description: "The reference url of tactic used by this threat. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.technique.id", DataType: "keyword", Description: "The id of technique used by this tactic. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "threat.technique.name", DataType: "keyword", Description: "The name of technique used by this tactic. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "threat.technique.reference", DataType: "keyword", Description: "The reference url of technique used by this tactic. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "url.extension", DataType: "keyword", Description: "The field contains the file extension from the original request url.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\"."},
	{Name: "url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.google.com\" is \"google.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for google.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "user.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	// ECS v1.3.0
	{Name: "event.ingested", DataType: "date", Description: "Timestamp when an event arrived in the central data store.\nThis is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.\nIn normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`."},
	{Name: "host.domain", DataType: "keyword", Description: "Name of the domain of which the host is a member. \nFor example, on Windows this could be the host's Active Directory domain or NetBIOS domain name.  For Linux this could be the domain of the host's LDAP provider."},
	{Name: "package.build_version", DataType: "keyword", Description: "Additional information about the build version of the installed package.\nFor example use the commit SHA of a non-released package."},
	{Name: "package.reference", DataType: "keyword", Description: "Home page or reference URL of the software in this package, if available."},
	{Name: "package.type", DataType: "keyword", Description: "Type of package.\nThis should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar."},
	{Name: "process.args", DataType: "keyword", Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.args_count", DataType: "long", Description: "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity."},
	{Name: "process.command_line", DataType: "keyword", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.exit_code", DataType: "long", Description: "The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start)."},
	{Name: "process.parent.args", DataType: "keyword", Description: "Array of process arguments.\nMay be filtered to protect sensitive information."},
	{Name: "process.parent.args_count", DataType: "long", Description: "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity."},
	{Name: "process.parent.command_line", DataType: "keyword", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.parent.executable", DataType: "keyword", Description: "Absolute path to the process executable."},
	{Name: "process.parent.exit_code", DataType: "long", Description: "The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start)."},
	{Name: "process.parent.name", DataType: "keyword", Description: "Process name.\nSometimes called program name or similar."},
	{Name: "process.parent.pgid", DataType: "long", Description: "Identifier of the group of processes the process belongs to."},
	{Name: "process.parent.pid", DataType: "long", Description: "Process id."},
	{Name: "process.parent.ppid", DataType: "long", Description: "Parent process' pid."},
	{Name: "process.parent.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.parent.thread.id", DataType: "long", Description: "Thread ID."},
	{Name: "process.parent.thread.name", DataType: "keyword", Description: "Thread name."},
	{Name: "process.parent.title", DataType: "keyword", Description: "Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened."},
	{Name: "process.parent.uptime", DataType: "long", Description: "Seconds the process has been up."},
	{Name: "process.parent.working_directory", DataType: "keyword", Description: "The working directory of the process."},
	{Name: "tls.cipher", DataType: "keyword", Description: "String indicating the cipher used during the current connection."},
	{Name: "tls.client.certificate", DataType: "keyword", Description: "PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list."},
	{Name: "tls.client.certificate_chain", DataType: "keyword", Description: "Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain."},
	{Name: "tls.client.hash.md5", DataType: "keyword", Description: "Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash."},
	{Name: "tls.client.hash.sha1", DataType: "keyword", Description: "Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash."},
	{Name: "tls.client.hash.sha256", DataType: "keyword", Description: "Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash."},
	{Name: "tls.client.issuer", DataType: "keyword", Description: "Distinguished name of subject of the issuer of the x.509 certificate presented by the client."},
	{Name: "tls.client.ja3", DataType: "keyword", Description: "A hash that identifies clients based on how they perform an SSL/TLS handshake."},
	{Name: "tls.client.not_after", DataType: "date", Description: "Date/Time indicating when client certificate is no longer considered valid."},
	{Name: "tls.client.not_before", DataType: "date", Description: "Date/Time indicating when client certificate is first considered valid."},
	{Name: "tls.client.server_name", DataType: "keyword", Description: "Also called an SNI, this tells the server which hostname to which the client is attempting to connect. When this value is available, it should get copied to `destination.domain`."},
	{Name: "tls.client.subject", DataType: "keyword", Description: "Distinguished name of subject of the x.509 certificate presented by the client."},
	{Name: "tls.client.supported_ciphers", DataType: "keyword", Description: "Array of ciphers offered by the client during the client hello."},
	{Name: "tls.curve", DataType: "keyword", Description: "String indicating the curve used for the given cipher, when applicable."},
	{Name: "tls.established", DataType: "boolean", Description: "Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel."},
	{Name: "tls.next_protocol", DataType: "keyword", Description: "String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case."},
	{Name: "tls.resumed", DataType: "boolean", Description: "Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation."},
	{Name: "tls.server.certificate", DataType: "keyword", Description: "PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list."},
	{Name: "tls.server.certificate_chain", DataType: "keyword", Description: "Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain."},
	{Name: "tls.server.hash.md5", DataType: "keyword", Description: "Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash."},
	{Name: "tls.server.hash.sha1", DataType: "keyword", Description: "Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash."},
	{Name: "tls.server.hash.sha256", DataType: "keyword", Description: "Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash."},
	{Name: "tls.server.issuer", DataType: "keyword", Description: "Subject of the issuer of the x.509 certificate presented by the server."},
	{Name: "tls.server.ja3s", DataType: "keyword", Description: "A hash that identifies servers based on how they perform an SSL/TLS handshake."},
	{Name: "tls.server.not_after", DataType: "date", Description: "Timestamp indicating when server certificate is no longer considered valid."},
	{Name: "tls.server.not_before", DataType: "date", Description: "Timestamp indicating when server certificate is first considered valid."},
	{Name: "tls.server.subject", DataType: "keyword", Description: "Subject of the x.509 certificate presented by the server."},
	{Name: "tls.server.supported_ciphers", DataType: "keyword", Description: "Array of ciphers offered by the server during the server hello."},
	{Name: "tls.version", DataType: "keyword", Description: "Numeric part of the version parsed from the original string."},
	{Name: "tls.version_protocol", DataType: "keyword", Description: "Normalized lowercase protocol name parsed from original string."},
	{Name: "vulnerability.category", DataType: "keyword", Description: "The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm)\nThis field must be an array."},
	{Name: "vulnerability.classification", DataType: "keyword", Description: "The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)"},
	{Name: "vulnerability.description", DataType: "keyword", Description: "The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created)"},
	{Name: "vulnerability.enumeration", DataType: "keyword", Description: "The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)"},
	{Name: "vulnerability.id", DataType: "keyword", Description: "The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)"},
	{Name: "vulnerability.reference", DataType: "keyword", Description: "A resource that provides additional information, context, and mitigations for the identified vulnerability."},
	{Name: "vulnerability.report_id", DataType: "keyword", Description: "The report or scan identification number."},
	{Name: "vulnerability.scanner.vendor", DataType: "keyword", Description: "The name of the vulnerability scanner vendor."},
	{Name: "vulnerability.score.base", DataType: "float", Description: "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nBase scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentialy, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)"},
	{Name: "vulnerability.score.environmental", DataType: "float", Description: "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nEnvironmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)"},
	{Name: "vulnerability.score.temporal", DataType: "float", Description: "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nTemporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)"},
	{Name: "vulnerability.score.version", DataType: "keyword", Description: "The National Vulnerability Database (NVD) provides qualitative severity rankings of \"Low\", \"Medium\", and \"High\" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification.\nCVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)"},
	{Name: "vulnerability.severity", DataType: "keyword", Description: "The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)"},
	// ECS v1.3.1
	{Name: "dns.question.class", DataType: "keyword", Description: "The class of records being queried."},
	{Name: "vulnerability.category", DataType: "keyword", Description: "The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories])\nThis field must be an array."},
	{Name: "vulnerability.description", DataType: "keyword", Description: "The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])"},
	{Name: "vulnerability.id", DataType: "keyword", Description: "The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]"},
	{Name: "vulnerability.score.base", DataType: "float", Description: "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nBase scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)"},
	// ECS v1.4.0
	{Name: "event.category", DataType: "keyword", Pattern: "(?:authentication|database|driver|file|host|intrusion_detection|malware|package|process|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "event.kind", DataType: "keyword", Pattern: "(?:alert|event|metric|pipeline_error|signal|state)", Description: "This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.\n`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.\nThe value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not."},
	{Name: "event.outcome", DataType: "keyword", Pattern: "(?:failure|success|unknown)", Description: "This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.\n`event.outcome` simply denotes whether the event represent a success or a failure. Note that not all events will have an associated outcome. For example, this field is generally not populated for metric events or events with `event.type:info`."},
	{Name: "event.type", DataType: "keyword", Pattern: "(?:access|change|creation|deletion|end|error|info|installation|start)", Description: "This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.\n`event.type` represents a categorization \"sub-bucket\" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.\nThis field is an array. This will allow proper categorization of some events that fall in multiple event types."},
	{Name: "file.attributes", DataType: "keyword", Description: "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write."},
	{Name: "file.directory", DataType: "keyword", Description: "Directory where the file is located. It should include the drive letter, when appropriate."},
	{Name: "file.drive_letter", DataType: "keyword", Description: "Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon."},
	{Name: "file.path", DataType: "keyword", Description: "Full path to the file, including the file name. It should include the drive letter, when appropriate."},
	{Name: "registry.data.bytes", DataType: "keyword", Description: "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values."},
	{Name: "registry.data.strings", DataType: "keyword", Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "registry.data.type", DataType: "keyword", Description: "Standard registry type for encoding contents"},
	{Name: "registry.hive", DataType: "keyword", Description: "Abbreviated name for the hive."},
	{Name: "registry.key", DataType: "keyword", Description: "Hive-relative path of keys."},
	{Name: "registry.path", DataType: "keyword", Description: "Full path, including hive, key and value"},
	{Name: "registry.value", DataType: "keyword", Description: "Name of the value written."},
	{Name: "related.user", DataType: "keyword", Description: "All the user names seen on your event."},
	{Name: "rule.category", DataType: "keyword", Description: "A categorization value keyword used by the entity using the rule for detection of this event."},
	{Name: "rule.description", DataType: "keyword", Description: "The description of the rule generating the event."},
	{Name: "rule.id", DataType: "keyword", Description: "A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event."},
	{Name: "rule.name", DataType: "keyword", Description: "The name of the rule or signature generating the event."},
	{Name: "rule.reference", DataType: "keyword", Description: "Reference URL to additional information about the rule used to generate this event.\nThe URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert."},
	{Name: "rule.ruleset", DataType: "keyword", Description: "Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member."},
	{Name: "rule.uuid", DataType: "keyword", Description: "A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event."},
	{Name: "rule.version", DataType: "keyword", Description: "The version / revision of the rule being used for analysis."},
	{Name: "threat.framework", DataType: "keyword", Description: "Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events."},
	{Name: "user_agent.original", DataType: "keyword", Description: "Unparsed user_agent string."},
	// ECS v1.5.0
	{Name: "client.user.id", DataType: "keyword", Description: "Unique identifiers of the user."},
	{Name: "code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "container.image.tag", DataType: "keyword", Array: true, Description: "Container image tags."},
	{Name: "destination.user.id", DataType: "keyword", Description: "Unique identifiers of the user."},
	{Name: "dll.code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "dll.code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "dll.code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "dll.code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "dll.code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "dll.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "dll.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "dll.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "dll.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "dll.name", DataType: "keyword", Description: "Name of the library.\nThis generally maps to the name of the file on disk."},
	{Name: "dll.path", DataType: "keyword", Description: "Full file path of the library."},
	{Name: "dll.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "dll.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "dll.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "dll.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "dll.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "dns.answers", DataType: "object", Array: true, Description: "An array containing an object for each answer section returned by the server.\nThe main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.\nNot all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields."},
	{Name: "dns.header_flags", DataType: "keyword", Array: true, Description: "Array of 2 letter DNS header flags.\nExpected values are: AA, TC, RD, RA, AD, CD, DO."},
	{Name: "dns.resolved_ip", DataType: "ip", Array: true, Description: "Array containing all IPs seen in `answers.data`.\nThe `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for."},
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:authentication|database|driver|file|host|iam|intrusion_detection|malware|network|package|process|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "event.outcome", DataType: "keyword", Pattern: "(?:failure|success|unknown)", Description: "This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.\n`event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.\nNote that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.\nAlso note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.\nFurther note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense."},
	{Name: "event.reference", DataType: "keyword", Description: "Reference URL linking to additional information about this event.\nThis URL links to a static definition of the this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field."},
	{Name: "event.sequence", DataType: "long", Description: "Sequence number of the event.\nThe sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision."},
	{Name: "event.type", DataType: "keyword", Array: true, Pattern: "(?:access|admin|allowed|change|connection|creation|deletion|denied|end|error|group|info|installation|protocol|start|user)", Description: "This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.\n`event.type` represents a categorization \"sub-bucket\" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.\nThis field is an array. This will allow proper categorization of some events that fall in multiple event types."},
	{Name: "event.url", DataType: "keyword", Description: "URL linking to an external system to continue investigation of this event.\nThis URL links to another system where in-depth investigation of the specific occurence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field."},
	{Name: "file.attributes", DataType: "keyword", Array: true, Description: "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write."},
	{Name: "file.code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "file.code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "file.code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "file.code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "file.code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "file.mime_type", DataType: "keyword", Description: "MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used."},
	{Name: "file.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "file.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "file.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "file.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "file.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "host.domain", DataType: "keyword", Description: "Name of the domain of which the host is a member.\nFor example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider."},
	{Name: "host.ip", DataType: "ip", Array: true, Description: "Host ip addresses."},
	{Name: "host.mac", DataType: "keyword", Array: true, Description: "Host mac addresses."},
	{Name: "host.user.id", DataType: "keyword", Description: "Unique identifiers of the user."},
	{Name: "interface.alias", DataType: "keyword", Description: "Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming."},
	{Name: "interface.id", DataType: "keyword", Description: "Interface ID as reported by an observer (typically SNMP interface ID)."},
	{Name: "interface.name", DataType: "keyword", Description: "Interface name as reported by the system."},
	{Name: "network.inner", DataType: "object", Description: "Network.inner fields are added in addition to network.vlan fields to describe  the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include  vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)"},
	{Name: "network.inner.vlan.id", DataType: "keyword", Description: "VLAN ID as reported by the observer."},
	{Name: "network.inner.vlan.name", DataType: "keyword", Description: "Optional VLAN name as reported by the observer."},
	{Name: "network.vlan.id", DataType: "keyword", Description: "VLAN ID as reported by the observer."},
	{Name: "network.vlan.name", DataType: "keyword", Description: "Optional VLAN name as reported by the observer."},
	{Name: "observer.egress", DataType: "object", Description: "Observer.egress holds information like interface number and name, vlan, and zone information to  classify egress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic."},
	{Name: "observer.egress.interface.alias", DataType: "keyword", Description: "Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming."},
	{Name: "observer.egress.interface.id", DataType: "keyword", Description: "Interface ID as reported by an observer (typically SNMP interface ID)."},
	{Name: "observer.egress.interface.name", DataType: "keyword", Description: "Interface name as reported by the system."},
	{Name: "observer.egress.vlan.id", DataType: "keyword", Description: "VLAN ID as reported by the observer."},
	{Name: "observer.egress.vlan.name", DataType: "keyword", Description: "Optional VLAN name as reported by the observer."},
	{Name: "observer.egress.zone", DataType: "keyword", Description: "Network zone of outbound traffic as reported by the observer to categorize the destination area of egress  traffic, e.g. Internal, External, DMZ, HR, Legal, etc."},
	{Name: "observer.ingress", DataType: "object", Description: "Observer.ingress holds information like interface number and name, vlan, and zone information to  classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic."},
	{Name: "observer.ingress.interface.alias", DataType: "keyword", Description: "Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming."},
	{Name: "observer.ingress.interface.id", DataType: "keyword", Description: "Interface ID as reported by an observer (typically SNMP interface ID)."},
	{Name: "observer.ingress.interface.name", DataType: "keyword", Description: "Interface name as reported by the system."},
	{Name: "observer.ingress.vlan.id", DataType: "keyword", Description: "VLAN ID as reported by the observer."},
	{Name: "observer.ingress.vlan.name", DataType: "keyword", Description: "Optional VLAN name as reported by the observer."},
	{Name: "observer.ingress.zone", DataType: "keyword", Description: "Network zone of incoming traffic as reported by the observer to categorize the source area of ingress  traffic. e.g. internal, External, DMZ, HR, Legal, etc."},
	{Name: "observer.ip", DataType: "ip", Array: true, Description: "IP addresses of the observer."},
	{Name: "observer.mac", DataType: "keyword", Array: true, Description: "MAC addresses of the observer"},
	{Name: "pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "process.args", DataType: "keyword", Array: true, Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "process.code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "process.code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "process.code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "process.code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "process.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.parent.args", DataType: "keyword", Array: true, Description: "Array of process arguments.\nMay be filtered to protect sensitive information."},
	{Name: "process.parent.code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "process.parent.code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "process.parent.code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "process.parent.code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "process.parent.code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "process.parent.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.parent.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "process.parent.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "process.parent.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "process.parent.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "process.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "process.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "process.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "process.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "process.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "related.hash", DataType: "keyword", Array: true, Description: "All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search)."},
	{Name: "related.ip", DataType: "ip", Array: true, Description: "All of the IPs seen on your event."},
	{Name: "related.user", DataType: "keyword", Array: true, Description: "All the user names seen on your event."},
	{Name: "rule.author", DataType: "keyword", Array: true, Description: "Name, organization, or pseudonym of the author or authors who created the rule used to generate this event."},
	{Name: "rule.license", DataType: "keyword", Description: "Name of the license under which the rule used to generate this event is made available."},
	{Name: "server.user.id", DataType: "keyword", Description: "Unique identifiers of the user."},
	{Name: "source.user.id", DataType: "keyword", Description: "Unique identifiers of the user."},
	{Name: "tags", DataType: "keyword", Array: true, Description: "List of keywords used to tag each event."},
	{Name: "threat.tactic.id", DataType: "keyword", Array: true, Description: "The id of tactic used by this threat. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.tactic.name", DataType: "keyword", Array: true, Description: "Name of the type of tactic used by this threat. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.tactic.reference", DataType: "keyword", Array: true, Description: "The reference url of tactic used by this threat. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.technique.id", DataType: "keyword", Array: true, Description: "The id of technique used by this tactic. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "threat.technique.name", DataType: "keyword", Array: true, Description: "The name of technique used by this tactic. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "threat.technique.reference", DataType: "keyword", Array: true, Description: "The reference url of technique used by this tactic. You can use the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "tls.client.certificate_chain", DataType: "keyword", Array: true, Description: "Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain."},
	{Name: "tls.client.supported_ciphers", DataType: "keyword", Array: true, Description: "Array of ciphers offered by the client during the client hello."},
	{Name: "tls.server.certificate_chain", DataType: "keyword", Array: true, Description: "Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain."},
	{Name: "user.id", DataType: "keyword", Description: "Unique identifiers of the user."},
	{Name: "vlan.id", DataType: "keyword", Description: "VLAN ID as reported by the observer."},
	{Name: "vlan.name", DataType: "keyword", Description: "Optional VLAN name as reported by the observer."},
	{Name: "vulnerability.category", DataType: "keyword", Array: true, Description: "The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories])\nThis field must be an array."},
	// ECS v1.6.0
	{Name: "agent.build.original", DataType: "keyword", Description: "Extended build information for the agent.\nThis field is intended to contain any build information that a data source may provide, no specific formatting is required."},
	{Name: "agent.type", DataType: "keyword", Description: "Type of the agent.\nThe agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine."},
	{Name: "client.ip", DataType: "ip", Description: "IP address of the client (IPv4 or IPv6)."},
	{Name: "client.registered_domain", DataType: "keyword", Description: "The highest registered client domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "client.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "client.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "client.user.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "cloud.account.name", DataType: "keyword", Description: "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name."},
	{Name: "cloud.project.id", DataType: "keyword", Description: "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id."},
	{Name: "cloud.project.name", DataType: "keyword", Description: "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name."},
	{Name: "destination.ip", DataType: "ip", Description: "IP address of the destination (IPv4 or IPv6)."},
	{Name: "destination.registered_domain", DataType: "keyword", Description: "The highest registered destination domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "destination.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "destination.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "destination.user.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "dll.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "dll.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "dns.question.registered_domain", DataType: "keyword", Description: "The highest registered domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "dns.question.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "event.reason", DataType: "keyword", Description: "Reason why this event happened, according to the source.\nThis describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`)."},
	{Name: "event.url", DataType: "keyword", Description: "URL linking to an external system to continue investigation of this event.\nThis URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field."},
	{Name: "file.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "file.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "file.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "file.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "file.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "file.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "file.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "file.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "file.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "file.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "file.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "file.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "file.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "file.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "file.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "file.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "file.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "file.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "file.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "file.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "file.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "file.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "file.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "file.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "file.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	{Name: "host.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "host.user.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "http.request.method", DataType: "keyword", Description: "HTTP request method.\nPrior to ECS 1.6.0 the following guidance was provided:\n\"The field value must be normalized to lowercase for querying.\"\nAs of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0"},
	{Name: "log.file.path", DataType: "keyword", Description: "Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate.\nIf the event wasn't read from a log file, do not populate this field."},
	{Name: "log.origin.file.name", DataType: "keyword", Description: "The name of the file containing the source code which originated the log event.\nNote that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`."},
	{Name: "process.parent.args", DataType: "keyword", Array: true, Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.parent.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "process.parent.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "process.parent.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "process.parent.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "process.parent.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "process.parent.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "process.parent.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "process.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "process.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "registry.data.strings", DataType: "keyword", Array: true, Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "related.hosts", DataType: "keyword", Array: true, Description: "All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases."},
	{Name: "server.ip", DataType: "ip", Description: "IP address of the server (IPv4 or IPv6)."},
	{Name: "server.registered_domain", DataType: "keyword", Description: "The highest registered server domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "server.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "server.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "server.user.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "source.ip", DataType: "ip", Description: "IP address of the source (IPv4 or IPv6)."},
	{Name: "source.registered_domain", DataType: "keyword", Description: "The highest registered source domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "source.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "source.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "source.user.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "span.id", DataType: "keyword", Description: "Unique identifier of the span within the scope of its trace.\nA span represents an operation within a transaction, such as a request to another service, or a database query."},
	{Name: "threat.tactic.id", DataType: "keyword", Array: true, Description: "The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.tactic.name", DataType: "keyword", Array: true, Description: "Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0040/)"},
	{Name: "threat.tactic.reference", DataType: "keyword", Array: true, Description: "The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )"},
	{Name: "threat.technique.id", DataType: "keyword", Array: true, Description: "The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1499/)"},
	{Name: "threat.technique.name", DataType: "keyword", Array: true, Description: "The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1499/)"},
	{Name: "threat.technique.reference", DataType: "keyword", Array: true, Description: "The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1499/ )"},
	{Name: "tls.client.server_name", DataType: "keyword", Description: "Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`."},
	{Name: "tls.client.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "tls.client.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "tls.client.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "tls.client.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "tls.client.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "tls.client.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "tls.client.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "tls.client.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "tls.client.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "tls.client.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "tls.client.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "tls.client.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "tls.client.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "tls.client.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "tls.client.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "tls.client.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "tls.client.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "tls.client.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "tls.client.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "tls.client.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "tls.client.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "tls.client.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "tls.client.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "tls.client.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	{Name: "tls.server.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "tls.server.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "tls.server.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "tls.server.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "tls.server.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "tls.server.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "tls.server.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "tls.server.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "tls.server.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "tls.server.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "tls.server.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "tls.server.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "tls.server.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "tls.server.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "tls.server.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "tls.server.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "tls.server.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "tls.server.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "tls.server.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "tls.server.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "tls.server.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "tls.server.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "tls.server.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "tls.server.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	{Name: "transaction.id", DataType: "keyword", Description: "Unique identifier of the transaction within the scope of its trace.\nA transaction is the highest level of work measured within a service, such as a request to a server."},
	{Name: "url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "user.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	// ECS v1.7.0
	{Name: "client.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "destination.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:authentication|configuration|database|driver|file|host|iam|intrusion_detection|malware|network|package|process|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "file.extension", DataType: "keyword", Description: "File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\")."},
	{Name: "http.request.mime_type", DataType: "keyword", Description: "Mime type of the body of the request.\nThis value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients."},
	{Name: "http.response.mime_type", DataType: "keyword", Description: "Mime type of the body of the response.\nThis value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers."},
	{Name: "network.direction", DataType: "keyword", Description: "Direction of the network traffic.\nRecommended values are:\n  * ingress\n  * egress\n  * inbound\n  * outbound\n  * internal\n  * external\n  * unknown\n\nWhen mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values \"ingress\" or \"egress\".\nWhen mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values \"inbound\", \"outbound\", \"internal\" or \"external\".\nNote that \"internal\" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that \"external\" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers."},
	{Name: "network.inner", DataType: "object", Description: "Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)"},
	{Name: "server.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "source.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "threat.tactic.id", DataType: "keyword", Array: true, Description: "The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )"},
	{Name: "threat.tactic.name", DataType: "keyword", Array: true, Description: "Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)"},
	{Name: "threat.tactic.reference", DataType: "keyword", Array: true, Description: "The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )"},
	{Name: "threat.technique.id", DataType: "keyword", Array: true, Description: "The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)"},
	{Name: "threat.technique.name", DataType: "keyword", Array: true, Description: "The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)"},
	{Name: "threat.technique.reference", DataType: "keyword", Array: true, Description: "The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)"},
	{Name: "threat.technique.subtechnique.id", DataType: "keyword", Array: true, Description: "The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)"},
	{Name: "threat.technique.subtechnique.name", DataType: "keyword", Array: true, Description: "The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)"},
	{Name: "threat.technique.subtechnique.reference", DataType: "keyword", Array: true, Description: "The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)"},
	{Name: "url.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	// ECS v1.8.0
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:authentication|configuration|database|driver|file|host|iam|intrusion_detection|malware|network|package|process|registry|session|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "event.original", DataType: "keyword", Description: "Raw text message of entire event. Used to demonstrate log integrity.\nThis field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, consider using the wildcard data type."},
	{Name: "event.reference", DataType: "keyword", Description: "Reference URL linking to additional information about this event.\nThis URL links to a static definition of this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field."},
	{Name: "host.os.type", DataType: "keyword", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	{Name: "observer.os.type", DataType: "keyword", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	{Name: "url.domain", DataType: "keyword", Description: "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field."},
	{Name: "url.extension", DataType: "keyword", Description: "The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\")."},
	{Name: "user.changes.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "user.changes.email", DataType: "keyword", Description: "User email address."},
	{Name: "user.changes.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "user.changes.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "user.changes.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "user.changes.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "user.changes.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "user.changes.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "user.changes.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "user.changes.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "user.effective.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "user.effective.email", DataType: "keyword", Description: "User email address."},
	{Name: "user.effective.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "user.effective.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "user.effective.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "user.effective.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "user.effective.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "user.effective.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "user.effective.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "user.effective.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "user.target.domain", DataType: "keyword", Description: "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "user.target.email", DataType: "keyword", Description: "User email address."},
	{Name: "user.target.full_name", DataType: "keyword", Description: "User's full name, if available."},
	{Name: "user.target.group.domain", DataType: "keyword", Description: "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name."},
	{Name: "user.target.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "user.target.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "user.target.hash", DataType: "keyword", Description: "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used."},
	{Name: "user.target.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "user.target.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "user.target.roles", DataType: "keyword", Array: true, Description: "Array of user roles at the time of the event."},
	{Name: "user_agent.os.type", DataType: "keyword", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	// ECS v1.9.0
	{Name: "client.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "client.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "client.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "client.mac", DataType: "keyword", Description: "MAC address of the client.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "cloud.service.name", DataType: "keyword", Description: "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda."},
	{Name: "destination.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "destination.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "destination.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "destination.mac", DataType: "keyword", Description: "MAC address of the destination.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "dll.code_signature.signing_id", DataType: "keyword", Description: "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only."},
	{Name: "dll.code_signature.team_id", DataType: "keyword", Description: "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only."},
	{Name: "dll.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "file.code_signature.signing_id", DataType: "keyword", Description: "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only."},
	{Name: "file.code_signature.team_id", DataType: "keyword", Description: "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only."},
	{Name: "file.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "host.cpu.usage", DataType: "scaled_float", Description: "Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1.\nScaling factor: 1000.\nFor example: For a two core host, this value should be the average of the two cores, between 0 and 1."},
	{Name: "host.disk.read.bytes", DataType: "long", Description: "The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection."},
	{Name: "host.disk.write.bytes", DataType: "long", Description: "The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection."},
	{Name: "host.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "host.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "host.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "host.mac", DataType: "keyword", Array: true, Description: "Host MAC addresses.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "host.network.egress.bytes", DataType: "long", Description: "The number of bytes (gauge) sent out on all network interfaces by the host since the last metric collection."},
	{Name: "host.network.egress.packets", DataType: "long", Description: "The number of packets (gauge) sent out on all network interfaces by the host since the last metric collection."},
	{Name: "host.network.ingress.bytes", DataType: "long", Description: "The number of bytes received (gauge) on all network interfaces by the host since the last metric collection."},
	{Name: "host.network.ingress.packets", DataType: "long", Description: "The number of packets (gauge) received on all network interfaces by the host since the last metric collection."},
	{Name: "http.request.id", DataType: "keyword", Description: "A unique identifier for each HTTP request to correlate logs between clients and servers in transactions.\nThe id may be contained in a non-standard HTTP header, such as `X-Request-ID` or `X-Correlation-ID`."},
	{Name: "observer.egress", DataType: "object", Description: "Observer.egress holds information like interface number and name, vlan, and zone information to classify egress traffic.  Single armed monitoring such as a network sensor on a span port should only use observer.ingress to categorize traffic."},
	{Name: "observer.egress.zone", DataType: "keyword", Description: "Network zone of outbound traffic as reported by the observer to categorize the destination area of egress traffic, e.g. Internal, External, DMZ, HR, Legal, etc."},
	{Name: "observer.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "observer.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "observer.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "observer.ingress", DataType: "object", Description: "Observer.ingress holds information like interface number and name, vlan, and zone information to classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should only use observer.ingress to categorize traffic."},
	{Name: "observer.ingress.zone", DataType: "keyword", Description: "Network zone of incoming traffic as reported by the observer to categorize the source area of ingress traffic. e.g. internal, External, DMZ, HR, Legal, etc."},
	{Name: "observer.mac", DataType: "keyword", Array: true, Description: "MAC addresses of the observer.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "process.code_signature.signing_id", DataType: "keyword", Description: "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only."},
	{Name: "process.code_signature.team_id", DataType: "keyword", Description: "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only."},
	{Name: "process.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "process.parent.code_signature.signing_id", DataType: "keyword", Description: "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only."},
	{Name: "process.parent.code_signature.team_id", DataType: "keyword", Description: "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only."},
	{Name: "process.parent.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "server.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "server.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "server.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "server.mac", DataType: "keyword", Description: "MAC address of the server.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "source.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "source.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "source.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "source.mac", DataType: "keyword", Description: "MAC address of the source.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	// ECS v1.10.0
	{Name: "data_stream.dataset", DataType: "constant_keyword", Description: "The field can contain anything that makes sense to signify the source of the data.\nExamples include `nginx.access`, `prometheus`, `endpoint` etc. For data streams that otherwise fit, but that do not have dataset set we use the value \"generic\" for the dataset value. `event.dataset` should have the same value as `data_stream.dataset`.\nBeyond the Elasticsearch data stream naming criteria noted above, the `dataset` value has additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters"},
	{Name: "data_stream.namespace", DataType: "constant_keyword", Description: "A user defined namespace. Namespaces are useful to allow grouping of data.\nMany users already organize their indices this way, and the data stream naming scheme now provides this best practice as a default. Many users will populate this field with `default`. If no value is used, it falls back to `default`.\nBeyond the Elasticsearch index naming criteria noted above, `namespace` value has the additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters"},
	{Name: "data_stream.type", DataType: "constant_keyword", Description: "An overarching type for the data stream.\nCurrently allowed values are \"logs\" and \"metrics\". We expect to also add \"traces\" and \"synthetics\" in the near future."},
	{Name: "orchestrator.api_version", DataType: "keyword", Description: "API version being used to carry out the action"},
	{Name: "orchestrator.cluster.name", DataType: "keyword", Description: "Name of the cluster."},
	{Name: "orchestrator.cluster.url", DataType: "keyword", Description: "URL of the API used to manage the cluster."},
	{Name: "orchestrator.cluster.version", DataType: "keyword", Description: "The version of the cluster."},
	{Name: "orchestrator.namespace", DataType: "keyword", Description: "Namespace in which the action is taking place."},
	{Name: "orchestrator.organization", DataType: "keyword", Description: "Organization affected by the event (for multi-tenant orchestrator setups)."},
	{Name: "orchestrator.resource.name", DataType: "keyword", Description: "Name of the resource being acted upon."},
	{Name: "orchestrator.resource.type", DataType: "keyword", Description: "Type of resource being acted upon."},
	{Name: "orchestrator.type", DataType: "keyword", Description: "Orchestrator cluster type (e.g. kubernetes, nomad or cloudfoundry)."},
	// ECS v1.11.0
	{Name: "cloud.availability_zone", DataType: "keyword", Description: "Availability zone in which this host, resource, or service is located."},
	{Name: "cloud.region", DataType: "keyword", Description: "Region in which this host, resource, or service is located."},
	{Name: "event.agent_id_status", DataType: "keyword", Description: "Agents are normally responsible for populating the `agent.id` field value. If the system receiving events is capable of validating the value based on authentication information for the client then this field can be used to reflect the outcome of that validation.\nFor example if the agent's connection is authenticated with mTLS and the client cert contains the ID of the agent to which the cert was issued then the `agent.id` value in events can be checked against the certificate. If the values match then `event.agent_id_status: verified` is added to the event, otherwise one of the other allowed values should be used.\nIf no validation is performed then the field should be omitted.\nThe allowed values are:\n`verified` - The `agent.id` field value matches expected value obtained from auth metadata.\n`mismatch` - The `agent.id` field value does not match the expected value obtained from auth metadata.\n`missing` - There was no `agent.id` field in the event to validate.\n`auth_metadata_missing` - There was no auth metadata or it was missing information about the agent ID."},
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:authentication|configuration|database|driver|file|host|iam|intrusion_detection|malware|network|package|process|registry|session|threat|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "event.kind", DataType: "keyword", Pattern: "(?:alert|enrichment|event|metric|pipeline_error|signal|state)", Description: "This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.\n`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.\nThe value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not."},
	{Name: "event.original", DataType: "keyword", Description: "Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.\nThis field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`."},
	{Name: "event.type", DataType: "keyword", Array: true, Pattern: "(?:access|admin|allowed|change|connection|creation|deletion|denied|end|error|group|indicator|info|installation|protocol|start|user)", Description: "This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.\n`event.type` represents a categorization \"sub-bucket\" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.\nThis field is an array. This will allow proper categorization of some events that fall in multiple event types."},
	{Name: "file.elf.architecture", DataType: "keyword", Description: "Machine architecture of the ELF file."},
	{Name: "file.elf.byte_order", DataType: "keyword", Description: "Byte sequence of ELF file."},
	{Name: "file.elf.cpu_type", DataType: "keyword", Description: "CPU type of the ELF file."},
	{Name: "file.elf.creation_date", DataType: "date", Description: "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators."},
	{Name: "file.elf.exports", DataType: "flattened", Array: true, Description: "List of exported element names and types."},
	{Name: "file.elf.header.abi_version", DataType: "keyword", Description: "Version of the ELF Application Binary Interface (ABI)."},
	{Name: "file.elf.header.class", DataType: "keyword", Description: "Header class of the ELF file."},
	{Name: "file.elf.header.data", DataType: "keyword", Description: "Data table of the ELF header."},
	{Name: "file.elf.header.entrypoint", DataType: "long", Description: "Header entrypoint of the ELF file."},
	{Name: "file.elf.header.object_version", DataType: "keyword", Description: "\"0x1\" for original ELF files."},
	{Name: "file.elf.header.os_abi", DataType: "keyword", Description: "Application Binary Interface (ABI) of the Linux OS."},
	{Name: "file.elf.header.type", DataType: "keyword", Description: "Header type of the ELF file."},
	{Name: "file.elf.header.version", DataType: "keyword", Description: "Version of the ELF header."},
	{Name: "file.elf.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "file.elf.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`."},
	{Name: "file.elf.sections.chi2", DataType: "long", Description: "Chi-square probability distribution of the section."},
	{Name: "file.elf.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "file.elf.sections.flags", DataType: "keyword", Description: "ELF Section List flags."},
	{Name: "file.elf.sections.name", DataType: "keyword", Description: "ELF Section List name."},
	{Name: "file.elf.sections.physical_offset", DataType: "keyword", Description: "ELF Section List offset."},
	{Name: "file.elf.sections.physical_size", DataType: "long", Description: "ELF Section List physical size."},
	{Name: "file.elf.sections.type", DataType: "keyword", Description: "ELF Section List type."},
	{Name: "file.elf.sections.virtual_address", DataType: "long", Description: "ELF Section List virtual address."},
	{Name: "file.elf.sections.virtual_size", DataType: "long", Description: "ELF Section List virtual size."},
	{Name: "file.elf.segments", DataType: "nested", Array: true, Description: "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`."},
	{Name: "file.elf.segments.sections", DataType: "keyword", Description: "ELF object segment sections."},
	{Name: "file.elf.segments.type", DataType: "keyword", Description: "ELF object segment type."},
	{Name: "file.elf.shared_libraries", DataType: "keyword", Array: true, Description: "List of shared libraries used by this ELF object."},
	{Name: "file.elf.telfhash", DataType: "keyword", Description: "telfhash symbol hash for ELF file."},
	{Name: "log.original", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field is superseded by  `event.original`.\nThis is the original log message and contains the full log message before splitting it up in multiple parts.\nIn contrast to the `message` field which can contain an extracted part of the log message, this field contains the original, full log message. It can have already some modifications applied like encoding or new lines removed to clean up the log message.\nThis field is not indexed and doc_values are disabled so it can't be queried but the value can be retrieved from `_source`."},
	{Name: "process.elf.architecture", DataType: "keyword", Description: "Machine architecture of the ELF file."},
	{Name: "process.elf.byte_order", DataType: "keyword", Description: "Byte sequence of ELF file."},
	{Name: "process.elf.cpu_type", DataType: "keyword", Description: "CPU type of the ELF file."},
	{Name: "process.elf.creation_date", DataType: "date", Description: "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators."},
	{Name: "process.elf.exports", DataType: "flattened", Array: true, Description: "List of exported element names and types."},
	{Name: "process.elf.header.abi_version", DataType: "keyword", Description: "Version of the ELF Application Binary Interface (ABI)."},
	{Name: "process.elf.header.class", DataType: "keyword", Description: "Header class of the ELF file."},
	{Name: "process.elf.header.data", DataType: "keyword", Description: "Data table of the ELF header."},
	{Name: "process.elf.header.entrypoint", DataType: "long", Description: "Header entrypoint of the ELF file."},
	{Name: "process.elf.header.object_version", DataType: "keyword", Description: "\"0x1\" for original ELF files."},
	{Name: "process.elf.header.os_abi", DataType: "keyword", Description: "Application Binary Interface (ABI) of the Linux OS."},
	{Name: "process.elf.header.type", DataType: "keyword", Description: "Header type of the ELF file."},
	{Name: "process.elf.header.version", DataType: "keyword", Description: "Version of the ELF header."},
	{Name: "process.elf.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "process.elf.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`."},
	{Name: "process.elf.sections.chi2", DataType: "long", Description: "Chi-square probability distribution of the section."},
	{Name: "process.elf.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "process.elf.sections.flags", DataType: "keyword", Description: "ELF Section List flags."},
	{Name: "process.elf.sections.name", DataType: "keyword", Description: "ELF Section List name."},
	{Name: "process.elf.sections.physical_offset", DataType: "keyword", Description: "ELF Section List offset."},
	{Name: "process.elf.sections.physical_size", DataType: "long", Description: "ELF Section List physical size."},
	{Name: "process.elf.sections.type", DataType: "keyword", Description: "ELF Section List type."},
	{Name: "process.elf.sections.virtual_address", DataType: "long", Description: "ELF Section List virtual address."},
	{Name: "process.elf.sections.virtual_size", DataType: "long", Description: "ELF Section List virtual size."},
	{Name: "process.elf.segments", DataType: "nested", Array: true, Description: "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`."},
	{Name: "process.elf.segments.sections", DataType: "keyword", Description: "ELF object segment sections."},
	{Name: "process.elf.segments.type", DataType: "keyword", Description: "ELF object segment type."},
	{Name: "process.elf.shared_libraries", DataType: "keyword", Array: true, Description: "List of shared libraries used by this ELF object."},
	{Name: "process.elf.telfhash", DataType: "keyword", Description: "telfhash symbol hash for ELF file."},
	{Name: "process.parent.elf.architecture", DataType: "keyword", Description: "Machine architecture of the ELF file."},
	{Name: "process.parent.elf.byte_order", DataType: "keyword", Description: "Byte sequence of ELF file."},
	{Name: "process.parent.elf.cpu_type", DataType: "keyword", Description: "CPU type of the ELF file."},
	{Name: "process.parent.elf.creation_date", DataType: "date", Description: "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators."},
	{Name: "process.parent.elf.exports", DataType: "flattened", Array: true, Description: "List of exported element names and types."},
	{Name: "process.parent.elf.header.abi_version", DataType: "keyword", Description: "Version of the ELF Application Binary Interface (ABI)."},
	{Name: "process.parent.elf.header.class", DataType: "keyword", Description: "Header class of the ELF file."},
	{Name: "process.parent.elf.header.data", DataType: "keyword", Description: "Data table of the ELF header."},
	{Name: "process.parent.elf.header.entrypoint", DataType: "long", Description: "Header entrypoint of the ELF file."},
	{Name: "process.parent.elf.header.object_version", DataType: "keyword", Description: "\"0x1\" for original ELF files."},
	{Name: "process.parent.elf.header.os_abi", DataType: "keyword", Description: "Application Binary Interface (ABI) of the Linux OS."},
	{Name: "process.parent.elf.header.type", DataType: "keyword", Description: "Header type of the ELF file."},
	{Name: "process.parent.elf.header.version", DataType: "keyword", Description: "Version of the ELF header."},
	{Name: "process.parent.elf.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "process.parent.elf.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`."},
	{Name: "process.parent.elf.sections.chi2", DataType: "long", Description: "Chi-square probability distribution of the section."},
	{Name: "process.parent.elf.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "process.parent.elf.sections.flags", DataType: "keyword", Description: "ELF Section List flags."},
	{Name: "process.parent.elf.sections.name", DataType: "keyword", Description: "ELF Section List name."},
	{Name: "process.parent.elf.sections.physical_offset", DataType: "keyword", Description: "ELF Section List offset."},
	{Name: "process.parent.elf.sections.physical_size", DataType: "long", Description: "ELF Section List physical size."},
	{Name: "process.parent.elf.sections.type", DataType: "keyword", Description: "ELF Section List type."},
	{Name: "process.parent.elf.sections.virtual_address", DataType: "long", Description: "ELF Section List virtual address."},
	{Name: "process.parent.elf.sections.virtual_size", DataType: "long", Description: "ELF Section List virtual size."},
	{Name: "process.parent.elf.segments", DataType: "nested", Array: true, Description: "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`."},
	{Name: "process.parent.elf.segments.sections", DataType: "keyword", Description: "ELF object segment sections."},
	{Name: "process.parent.elf.segments.type", DataType: "keyword", Description: "ELF object segment type."},
	{Name: "process.parent.elf.shared_libraries", DataType: "keyword", Array: true, Description: "List of shared libraries used by this ELF object."},
	{Name: "process.parent.elf.telfhash", DataType: "keyword", Description: "telfhash symbol hash for ELF file."},
	{Name: "related.user", DataType: "keyword", Array: true, Description: "All the user names or other user identifiers seen on the event."},
	{Name: "threat.enrichments", DataType: "nested", Description: "A list of associated indicators objects enriching the event, and the context of that association/enrichment."},
	{Name: "threat.enrichments.indicator", DataType: "object", Description: "Object containing associated indicators enriching the event."},
	{Name: "threat.enrichments.indicator.as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "threat.enrichments.indicator.as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "threat.enrichments.indicator.confidence", DataType: "keyword", Description: "Identifies\u00a0the\u00a0confidence\u00a0rating\u00a0assigned\u00a0by\u00a0the\u00a0provider\u00a0using\u00a0STIX\u00a0confidence scales. Expected values:\n  * Not Specified, None, Low, Medium, High\n  * 0-10\n  * Admirality Scale (1-6)\n  * DNI Scale (5-95)\n  * WEP Scale (Impossible - Certain)"},
	{Name: "threat.enrichments.indicator.description", DataType: "keyword", Description: "Describes the type of action conducted by the threat."},
	{Name: "threat.enrichments.indicator.email.address", DataType: "keyword", Description: "Identifies a threat indicator as an email address (irrespective of direction)."},
	{Name: "threat.enrichments.indicator.file.accessed", DataType: "date", Description: "Last time the file was accessed.\nNote that not all filesystems keep track of access time."},
	{Name: "threat.enrichments.indicator.file.attributes", DataType: "keyword", Array: true, Description: "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write."},
	{Name: "threat.enrichments.indicator.file.code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "threat.enrichments.indicator.file.code_signature.signing_id", DataType: "keyword", Description: "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only."},
	{Name: "threat.enrichments.indicator.file.code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "threat.enrichments.indicator.file.code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "threat.enrichments.indicator.file.code_signature.team_id", DataType: "keyword", Description: "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only."},
	{Name: "threat.enrichments.indicator.file.code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "threat.enrichments.indicator.file.code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "threat.enrichments.indicator.file.created", DataType: "date", Description: "File creation time.\nNote that not all filesystems store the creation time."},
	{Name: "threat.enrichments.indicator.file.ctime", DataType: "date", Description: "Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file."},
	{Name: "threat.enrichments.indicator.file.device", DataType: "keyword", Description: "Device that is the source of the file."},
	{Name: "threat.enrichments.indicator.file.directory", DataType: "keyword", Description: "Directory where the file is located. It should include the drive letter, when appropriate."},
	{Name: "threat.enrichments.indicator.file.drive_letter", DataType: "keyword", Description: "Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon."},
	{Name: "threat.enrichments.indicator.file.elf.architecture", DataType: "keyword", Description: "Machine architecture of the ELF file."},
	{Name: "threat.enrichments.indicator.file.elf.byte_order", DataType: "keyword", Description: "Byte sequence of ELF file."},
	{Name: "threat.enrichments.indicator.file.elf.cpu_type", DataType: "keyword", Description: "CPU type of the ELF file."},
	{Name: "threat.enrichments.indicator.file.elf.creation_date", DataType: "date", Description: "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators."},
	{Name: "threat.enrichments.indicator.file.elf.exports", DataType: "flattened", Array: true, Description: "List of exported element names and types."},
	{Name: "threat.enrichments.indicator.file.elf.header.abi_version", DataType: "keyword", Description: "Version of the ELF Application Binary Interface (ABI)."},
	{Name: "threat.enrichments.indicator.file.elf.header.class", DataType: "keyword", Description: "Header class of the ELF file."},
	{Name: "threat.enrichments.indicator.file.elf.header.data", DataType: "keyword", Description: "Data table of the ELF header."},
	{Name: "threat.enrichments.indicator.file.elf.header.entrypoint", DataType: "long", Description: "Header entrypoint of the ELF file."},
	{Name: "threat.enrichments.indicator.file.elf.header.object_version", DataType: "keyword", Description: "\"0x1\" for original ELF files."},
	{Name: "threat.enrichments.indicator.file.elf.header.os_abi", DataType: "keyword", Description: "Application Binary Interface (ABI) of the Linux OS."},
	{Name: "threat.enrichments.indicator.file.elf.header.type", DataType: "keyword", Description: "Header type of the ELF file."},
	{Name: "threat.enrichments.indicator.file.elf.header.version", DataType: "keyword", Description: "Version of the ELF header."},
	{Name: "threat.enrichments.indicator.file.elf.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "threat.enrichments.indicator.file.elf.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`."},
	{Name: "threat.enrichments.indicator.file.elf.sections.chi2", DataType: "long", Description: "Chi-square probability distribution of the section."},
	{Name: "threat.enrichments.indicator.file.elf.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "threat.enrichments.indicator.file.elf.sections.flags", DataType: "keyword", Description: "ELF Section List flags."},
	{Name: "threat.enrichments.indicator.file.elf.sections.name", DataType: "keyword", Description: "ELF Section List name."},
	{Name: "threat.enrichments.indicator.file.elf.sections.physical_offset", DataType: "keyword", Description: "ELF Section List offset."},
	{Name: "threat.enrichments.indicator.file.elf.sections.physical_size", DataType: "long", Description: "ELF Section List physical size."},
	{Name: "threat.enrichments.indicator.file.elf.sections.type", DataType: "keyword", Description: "ELF Section List type."},
	{Name: "threat.enrichments.indicator.file.elf.sections.virtual_address", DataType: "long", Description: "ELF Section List virtual address."},
	{Name: "threat.enrichments.indicator.file.elf.sections.virtual_size", DataType: "long", Description: "ELF Section List virtual size."},
	{Name: "threat.enrichments.indicator.file.elf.segments", DataType: "nested", Array: true, Description: "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`."},
	{Name: "threat.enrichments.indicator.file.elf.segments.sections", DataType: "keyword", Description: "ELF object segment sections."},
	{Name: "threat.enrichments.indicator.file.elf.segments.type", DataType: "keyword", Description: "ELF object segment type."},
	{Name: "threat.enrichments.indicator.file.elf.shared_libraries", DataType: "keyword", Array: true, Description: "List of shared libraries used by this ELF object."},
	{Name: "threat.enrichments.indicator.file.elf.telfhash", DataType: "keyword", Description: "telfhash symbol hash for ELF file."},
	{Name: "threat.enrichments.indicator.file.extension", DataType: "keyword", Description: "File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\")."},
	{Name: "threat.enrichments.indicator.file.gid", DataType: "keyword", Description: "Primary group ID (GID) of the file."},
	{Name: "threat.enrichments.indicator.file.group", DataType: "keyword", Description: "Primary group name of the file."},
	{Name: "threat.enrichments.indicator.file.inode", DataType: "keyword", Description: "Inode representing the file in the filesystem."},
	{Name: "threat.enrichments.indicator.file.mime_type", DataType: "keyword", Description: "MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used."},
	{Name: "threat.enrichments.indicator.file.mode", DataType: "keyword", Description: "Mode of the file in octal representation."},
	{Name: "threat.enrichments.indicator.file.mtime", DataType: "date", Description: "Last time the file content was modified."},
	{Name: "threat.enrichments.indicator.file.name", DataType: "keyword", Description: "Name of the file including the extension, without the directory."},
	{Name: "threat.enrichments.indicator.file.owner", DataType: "keyword", Description: "File owner's username."},
	{Name: "threat.enrichments.indicator.file.path", DataType: "keyword", Description: "Full path to the file, including the file name. It should include the drive letter, when appropriate."},
	{Name: "threat.enrichments.indicator.file.size", DataType: "long", Description: "File size in bytes.\nOnly relevant when `file.type` is \"file\"."},
	{Name: "threat.enrichments.indicator.file.target_path", DataType: "keyword", Description: "Target path for symlinks."},
	{Name: "threat.enrichments.indicator.file.type", DataType: "keyword", Description: "File type (file, dir, or symlink)."},
	{Name: "threat.enrichments.indicator.file.uid", DataType: "keyword", Description: "The user ID (UID) or security identifier (SID) of the file owner."},
	{Name: "threat.enrichments.indicator.first_seen", DataType: "date", Description: "The date and time when intelligence source first reported sighting this indicator."},
	{Name: "threat.enrichments.indicator.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "threat.enrichments.indicator.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "threat.enrichments.indicator.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "threat.enrichments.indicator.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "threat.enrichments.indicator.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "threat.enrichments.indicator.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "threat.enrichments.indicator.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "threat.enrichments.indicator.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "threat.enrichments.indicator.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "threat.enrichments.indicator.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "threat.enrichments.indicator.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "threat.enrichments.indicator.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "threat.enrichments.indicator.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "threat.enrichments.indicator.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "threat.enrichments.indicator.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "threat.enrichments.indicator.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "threat.enrichments.indicator.ip", DataType: "ip", Description: "Identifies a threat indicator as an IP address (irrespective of direction)."},
	{Name: "threat.enrichments.indicator.last_seen", DataType: "date", Description: "The date and time when intelligence source last reported sighting this indicator."},
	{Name: "threat.enrichments.indicator.marking.tlp", DataType: "keyword", Description: "Traffic Light Protocol sharing markings. Recommended values are:\n  * WHITE\n  * GREEN\n  * AMBER\n  * RED"},
	{Name: "threat.enrichments.indicator.modified_at", DataType: "date", Description: "The date and time when intelligence source last modified information for this indicator."},
	{Name: "threat.enrichments.indicator.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "threat.enrichments.indicator.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "threat.enrichments.indicator.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.port", DataType: "long", Description: "Identifies a threat indicator as a port number (irrespective of direction)."},
	{Name: "threat.enrichments.indicator.provider", DataType: "keyword", Description: "The name of the indicator's provider."},
	{Name: "threat.enrichments.indicator.reference", DataType: "keyword", Description: "Reference URL linking to additional information about this indicator."},
	{Name: "threat.enrichments.indicator.registry.data.bytes", DataType: "keyword", Description: "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values."},
	{Name: "threat.enrichments.indicator.registry.data.strings", DataType: "keyword", Array: true, Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "threat.enrichments.indicator.registry.data.type", DataType: "keyword", Description: "Standard registry type for encoding contents"},
	{Name: "threat.enrichments.indicator.registry.hive", DataType: "keyword", Description: "Abbreviated name for the hive."},
	{Name: "threat.enrichments.indicator.registry.key", DataType: "keyword", Description: "Hive-relative path of keys."},
	{Name: "threat.enrichments.indicator.registry.path", DataType: "keyword", Description: "Full path, including hive, key and value"},
	{Name: "threat.enrichments.indicator.registry.value", DataType: "keyword", Description: "Name of the value written."},
	{Name: "threat.enrichments.indicator.scanner_stats", DataType: "long", Description: "Count of AV/EDR vendors that successfully detected malicious file or URL."},
	{Name: "threat.enrichments.indicator.sightings", DataType: "long", Description: "Number of times this indicator was observed conducting threat activity."},
	{Name: "threat.enrichments.indicator.type", DataType: "keyword", Description: "Type of indicator as represented by Cyber Observable in STIX 2.0. Recommended values:\n  * autonomous-system\n  * artifact\n  * directory\n  * domain-name\n  * email-addr\n  * file\n  * ipv4-addr\n  * ipv6-addr\n  * mac-addr\n  * mutex\n  * port\n  * process\n  * software\n  * url\n  * user-account\n  * windows-registry-key\n  * x509-certificate"},
	{Name: "threat.enrichments.indicator.url.domain", DataType: "keyword", Description: "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field."},
	{Name: "threat.enrichments.indicator.url.extension", DataType: "keyword", Description: "The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\")."},
	{Name: "threat.enrichments.indicator.url.fragment", DataType: "keyword", Description: "Portion of the url after the `#`, such as \"top\".\nThe `#` is not part of the fragment."},
	{Name: "threat.enrichments.indicator.url.full", DataType: "keyword", Description: "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source."},
	{Name: "threat.enrichments.indicator.url.original", DataType: "keyword", Description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."},
	{Name: "threat.enrichments.indicator.url.password", DataType: "keyword", Description: "Password of the request."},
	{Name: "threat.enrichments.indicator.url.path", DataType: "keyword", Description: "Path of the request, such as \"/search\"."},
	{Name: "threat.enrichments.indicator.url.port", DataType: "long", Description: "Port of the request, such as 443."},
	{Name: "threat.enrichments.indicator.url.query", DataType: "keyword", Description: "The query field describes the query string of the request, such as \"q=elasticsearch\".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases."},
	{Name: "threat.enrichments.indicator.url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "threat.enrichments.indicator.url.scheme", DataType: "keyword", Description: "Scheme of the request, such as \"https\".\nNote: The `:` is not part of the scheme."},
	{Name: "threat.enrichments.indicator.url.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "threat.enrichments.indicator.url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "threat.enrichments.indicator.url.username", DataType: "keyword", Description: "Username of the request."},
	{Name: "threat.enrichments.indicator.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "threat.enrichments.indicator.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "threat.enrichments.indicator.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.enrichments.indicator.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.enrichments.indicator.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "threat.enrichments.indicator.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "threat.enrichments.indicator.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "threat.enrichments.indicator.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "threat.enrichments.indicator.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "threat.enrichments.indicator.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "threat.enrichments.indicator.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "threat.enrichments.indicator.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "threat.enrichments.indicator.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "threat.enrichments.indicator.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "threat.enrichments.indicator.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "threat.enrichments.indicator.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.enrichments.indicator.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "threat.enrichments.indicator.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "threat.enrichments.indicator.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.enrichments.indicator.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	{Name: "threat.enrichments.matched.atomic", DataType: "keyword", Description: "Identifies the atomic indicator value that matched a local environment endpoint or network event."},
	{Name: "threat.enrichments.matched.field", DataType: "keyword", Description: "Identifies the field of the atomic indicator that matched a local environment endpoint or network event."},
	{Name: "threat.enrichments.matched.id", DataType: "keyword", Description: "Identifies the _id of the indicator document enriching the event."},
	{Name: "threat.enrichments.matched.index", DataType: "keyword", Description: "Identifies the _index of the indicator document enriching the event."},
	{Name: "threat.enrichments.matched.type", DataType: "keyword", Description: "Identifies the type of match that caused the event to be enriched with the given indicator"},
	{Name: "threat.group.alias", DataType: "keyword", Array: true, Description: "The alias(es) of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group alias(es)."},
	{Name: "threat.group.id", DataType: "keyword", Description: "The id of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group id."},
	{Name: "threat.group.name", DataType: "keyword", Description: "The name of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group name."},
	{Name: "threat.group.reference", DataType: "keyword", Description: "The reference URL of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group reference URL."},
	{Name: "threat.indicator.as.number", DataType: "long", Description: "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet."},
	{Name: "threat.indicator.as.organization.name", DataType: "keyword", Description: "Organization name."},
	{Name: "threat.indicator.confidence", DataType: "keyword", Description: "Identifies the confidence rating assigned by the provider using STIX confidence scales.\nRecommended values:\n  * Not Specified, None, Low, Medium, High\n  * 0-10\n  * Admirality Scale (1-6)\n  * DNI Scale (5-95)\n  * WEP Scale (Impossible - Certain)"},
	{Name: "threat.indicator.description", DataType: "keyword", Description: "Describes the type of action conducted by the threat."},
	{Name: "threat.indicator.email.address", DataType: "keyword", Description: "Identifies a threat indicator as an email address (irrespective of direction)."},
	{Name: "threat.indicator.file.accessed", DataType: "date", Description: "Last time the file was accessed.\nNote that not all filesystems keep track of access time."},
	{Name: "threat.indicator.file.attributes", DataType: "keyword", Array: true, Description: "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write."},
	{Name: "threat.indicator.file.code_signature.exists", DataType: "boolean", Description: "Boolean to capture if a signature is present."},
	{Name: "threat.indicator.file.code_signature.signing_id", DataType: "keyword", Description: "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only."},
	{Name: "threat.indicator.file.code_signature.status", DataType: "keyword", Description: "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked."},
	{Name: "threat.indicator.file.code_signature.subject_name", DataType: "keyword", Description: "Subject name of the code signer"},
	{Name: "threat.indicator.file.code_signature.team_id", DataType: "keyword", Description: "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only."},
	{Name: "threat.indicator.file.code_signature.trusted", DataType: "boolean", Description: "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status."},
	{Name: "threat.indicator.file.code_signature.valid", DataType: "boolean", Description: "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked."},
	{Name: "threat.indicator.file.created", DataType: "date", Description: "File creation time.\nNote that not all filesystems store the creation time."},
	{Name: "threat.indicator.file.ctime", DataType: "date", Description: "Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file."},
	{Name: "threat.indicator.file.device", DataType: "keyword", Description: "Device that is the source of the file."},
	{Name: "threat.indicator.file.directory", DataType: "keyword", Description: "Directory where the file is located. It should include the drive letter, when appropriate."},
	{Name: "threat.indicator.file.drive_letter", DataType: "keyword", Description: "Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon."},
	{Name: "threat.indicator.file.elf.architecture", DataType: "keyword", Description: "Machine architecture of the ELF file."},
	{Name: "threat.indicator.file.elf.byte_order", DataType: "keyword", Description: "Byte sequence of ELF file."},
	{Name: "threat.indicator.file.elf.cpu_type", DataType: "keyword", Description: "CPU type of the ELF file."},
	{Name: "threat.indicator.file.elf.creation_date", DataType: "date", Description: "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators."},
	{Name: "threat.indicator.file.elf.exports", DataType: "flattened", Array: true, Description: "List of exported element names and types."},
	{Name: "threat.indicator.file.elf.header.abi_version", DataType: "keyword", Description: "Version of the ELF Application Binary Interface (ABI)."},
	{Name: "threat.indicator.file.elf.header.class", DataType: "keyword", Description: "Header class of the ELF file."},
	{Name: "threat.indicator.file.elf.header.data", DataType: "keyword", Description: "Data table of the ELF header."},
	{Name: "threat.indicator.file.elf.header.entrypoint", DataType: "long", Description: "Header entrypoint of the ELF file."},
	{Name: "threat.indicator.file.elf.header.object_version", DataType: "keyword", Description: "\"0x1\" for original ELF files."},
	{Name: "threat.indicator.file.elf.header.os_abi", DataType: "keyword", Description: "Application Binary Interface (ABI) of the Linux OS."},
	{Name: "threat.indicator.file.elf.header.type", DataType: "keyword", Description: "Header type of the ELF file."},
	{Name: "threat.indicator.file.elf.header.version", DataType: "keyword", Description: "Version of the ELF header."},
	{Name: "threat.indicator.file.elf.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "threat.indicator.file.elf.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`."},
	{Name: "threat.indicator.file.elf.sections.chi2", DataType: "long", Description: "Chi-square probability distribution of the section."},
	{Name: "threat.indicator.file.elf.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "threat.indicator.file.elf.sections.flags", DataType: "keyword", Description: "ELF Section List flags."},
	{Name: "threat.indicator.file.elf.sections.name", DataType: "keyword", Description: "ELF Section List name."},
	{Name: "threat.indicator.file.elf.sections.physical_offset", DataType: "keyword", Description: "ELF Section List offset."},
	{Name: "threat.indicator.file.elf.sections.physical_size", DataType: "long", Description: "ELF Section List physical size."},
	{Name: "threat.indicator.file.elf.sections.type", DataType: "keyword", Description: "ELF Section List type."},
	{Name: "threat.indicator.file.elf.sections.virtual_address", DataType: "long", Description: "ELF Section List virtual address."},
	{Name: "threat.indicator.file.elf.sections.virtual_size", DataType: "long", Description: "ELF Section List virtual size."},
	{Name: "threat.indicator.file.elf.segments", DataType: "nested", Array: true, Description: "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`."},
	{Name: "threat.indicator.file.elf.segments.sections", DataType: "keyword", Description: "ELF object segment sections."},
	{Name: "threat.indicator.file.elf.segments.type", DataType: "keyword", Description: "ELF object segment type."},
	{Name: "threat.indicator.file.elf.shared_libraries", DataType: "keyword", Array: true, Description: "List of shared libraries used by this ELF object."},
	{Name: "threat.indicator.file.elf.telfhash", DataType: "keyword", Description: "telfhash symbol hash for ELF file."},
	{Name: "threat.indicator.file.extension", DataType: "keyword", Description: "File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\")."},
	{Name: "threat.indicator.file.gid", DataType: "keyword", Description: "Primary group ID (GID) of the file."},
	{Name: "threat.indicator.file.group", DataType: "keyword", Description: "Primary group name of the file."},
	{Name: "threat.indicator.file.inode", DataType: "keyword", Description: "Inode representing the file in the filesystem."},
	{Name: "threat.indicator.file.mime_type", DataType: "keyword", Description: "MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used."},
	{Name: "threat.indicator.file.mode", DataType: "keyword", Description: "Mode of the file in octal representation."},
	{Name: "threat.indicator.file.mtime", DataType: "date", Description: "Last time the file content was modified."},
	{Name: "threat.indicator.file.name", DataType: "keyword", Description: "Name of the file including the extension, without the directory."},
	{Name: "threat.indicator.file.owner", DataType: "keyword", Description: "File owner's username."},
	{Name: "threat.indicator.file.path", DataType: "keyword", Description: "Full path to the file, including the file name. It should include the drive letter, when appropriate."},
	{Name: "threat.indicator.file.size", DataType: "long", Description: "File size in bytes.\nOnly relevant when `file.type` is \"file\"."},
	{Name: "threat.indicator.file.target_path", DataType: "keyword", Description: "Target path for symlinks."},
	{Name: "threat.indicator.file.type", DataType: "keyword", Description: "File type (file, dir, or symlink)."},
	{Name: "threat.indicator.file.uid", DataType: "keyword", Description: "The user ID (UID) or security identifier (SID) of the file owner."},
	{Name: "threat.indicator.first_seen", DataType: "date", Description: "The date and time when intelligence source first reported sighting this indicator."},
	{Name: "threat.indicator.geo.city_name", DataType: "keyword", Description: "City name."},
	{Name: "threat.indicator.geo.continent_code", DataType: "keyword", Description: "Two-letter code representing continent's name."},
	{Name: "threat.indicator.geo.continent_name", DataType: "keyword", Description: "Name of the continent."},
	{Name: "threat.indicator.geo.country_iso_code", DataType: "keyword", Description: "Country ISO code."},
	{Name: "threat.indicator.geo.country_name", DataType: "keyword", Description: "Country name."},
	{Name: "threat.indicator.geo.location", DataType: "geo_point", Description: "Longitude and latitude."},
	{Name: "threat.indicator.geo.name", DataType: "keyword", Description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."},
	{Name: "threat.indicator.geo.postal_code", DataType: "keyword", Description: "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country."},
	{Name: "threat.indicator.geo.region_iso_code", DataType: "keyword", Description: "Region ISO code."},
	{Name: "threat.indicator.geo.region_name", DataType: "keyword", Description: "Region name."},
	{Name: "threat.indicator.geo.timezone", DataType: "keyword", Description: "The time zone of the location, such as IANA time zone name."},
	{Name: "threat.indicator.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "threat.indicator.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "threat.indicator.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "threat.indicator.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "threat.indicator.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "threat.indicator.ip", DataType: "ip", Description: "Identifies a threat indicator as an IP address (irrespective of direction)."},
	{Name: "threat.indicator.last_seen", DataType: "date", Description: "The date and time when intelligence source last reported sighting this indicator."},
	{Name: "threat.indicator.marking.tlp", DataType: "keyword", Description: "Traffic Light Protocol sharing markings.\nRecommended values are:\n  * WHITE\n  * GREEN\n  * AMBER\n  * RED"},
	{Name: "threat.indicator.modified_at", DataType: "date", Description: "The date and time when intelligence source last modified information for this indicator."},
	{Name: "threat.indicator.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "threat.indicator.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "threat.indicator.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "threat.indicator.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "threat.indicator.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "threat.indicator.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "threat.indicator.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "threat.indicator.port", DataType: "long", Description: "Identifies a threat indicator as a port number (irrespective of direction)."},
	{Name: "threat.indicator.provider", DataType: "keyword", Description: "The name of the indicator's provider."},
	{Name: "threat.indicator.reference", DataType: "keyword", Description: "Reference URL linking to additional information about this indicator."},
	{Name: "threat.indicator.registry.data.bytes", DataType: "keyword", Description: "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values."},
	{Name: "threat.indicator.registry.data.strings", DataType: "keyword", Array: true, Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "threat.indicator.registry.data.type", DataType: "keyword", Description: "Standard registry type for encoding contents"},
	{Name: "threat.indicator.registry.hive", DataType: "keyword", Description: "Abbreviated name for the hive."},
	{Name: "threat.indicator.registry.key", DataType: "keyword", Description: "Hive-relative path of keys."},
	{Name: "threat.indicator.registry.path", DataType: "keyword", Description: "Full path, including hive, key and value"},
	{Name: "threat.indicator.registry.value", DataType: "keyword", Description: "Name of the value written."},
	{Name: "threat.indicator.scanner_stats", DataType: "long", Description: "Count of AV/EDR vendors that successfully detected malicious file or URL."},
	{Name: "threat.indicator.sightings", DataType: "long", Description: "Number of times this indicator was observed conducting threat activity."},
	{Name: "threat.indicator.type", DataType: "keyword", Description: "Type of indicator as represented by Cyber Observable in STIX 2.0.\nRecommended values:\n  * autonomous-system\n  * artifact\n  * directory\n  * domain-name\n  * email-addr\n  * file\n  * ipv4-addr\n  * ipv6-addr\n  * mac-addr\n  * mutex\n  * port\n  * process\n  * software\n  * url\n  * user-account\n  * windows-registry-key\n  * x509-certificate"},
	{Name: "threat.indicator.url.domain", DataType: "keyword", Description: "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field."},
	{Name: "threat.indicator.url.extension", DataType: "keyword", Description: "The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\")."},
	{Name: "threat.indicator.url.fragment", DataType: "keyword", Description: "Portion of the url after the `#`, such as \"top\".\nThe `#` is not part of the fragment."},
	{Name: "threat.indicator.url.full", DataType: "keyword", Description: "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source."},
	{Name: "threat.indicator.url.original", DataType: "keyword", Description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."},
	{Name: "threat.indicator.url.password", DataType: "keyword", Description: "Password of the request."},
	{Name: "threat.indicator.url.path", DataType: "keyword", Description: "Path of the request, such as \"/search\"."},
	{Name: "threat.indicator.url.port", DataType: "long", Description: "Port of the request, such as 443."},
	{Name: "threat.indicator.url.query", DataType: "keyword", Description: "The query field describes the query string of the request, such as \"q=elasticsearch\".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases."},
	{Name: "threat.indicator.url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "threat.indicator.url.scheme", DataType: "keyword", Description: "Scheme of the request, such as \"https\".\nNote: The `:` is not part of the scheme."},
	{Name: "threat.indicator.url.subdomain", DataType: "keyword", Description: "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period."},
	{Name: "threat.indicator.url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "threat.indicator.url.username", DataType: "keyword", Description: "Username of the request."},
	{Name: "threat.indicator.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "threat.indicator.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "threat.indicator.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "threat.indicator.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "threat.indicator.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.indicator.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "threat.indicator.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "threat.indicator.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.indicator.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "threat.indicator.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "threat.indicator.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "threat.indicator.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "threat.indicator.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "threat.indicator.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "threat.indicator.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "threat.indicator.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "threat.indicator.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "threat.indicator.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "threat.indicator.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "threat.indicator.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.indicator.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "threat.indicator.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "threat.indicator.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.indicator.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	{Name: "threat.software.id", DataType: "keyword", Description: "The id of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software id."},
	{Name: "threat.software.name", DataType: "keyword", Description: "The name of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software name."},
	{Name: "threat.software.platforms", DataType: "keyword", Array: true, Description: "The platforms of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software platforms.\nRecommended Values:\n  * AWS\n  * Azure\n  * Azure AD\n  * GCP\n  * Linux\n  * macOS\n  * Network\n  * Office 365\n  * SaaS\n  * Windows"},
	{Name: "threat.software.reference", DataType: "keyword", Description: "The reference URL of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software reference URL."},
	{Name: "threat.software.type", DataType: "keyword", Description: "The type of software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software type.\nRecommended values\n  * Malware\n  * Tool"},
	// ECS v1.12.0
	{Name: "dll.code_signature.digest_algorithm", DataType: "keyword", Description: "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm."},
	{Name: "dll.code_signature.timestamp", DataType: "date", Description: "Date and time when the code signature was generated and signed."},
	{Name: "error.message", DataType: "match_only_text", Description: "Error message."},
	{Name: "error.stack_trace", DataType: "wildcard", Description: "The stack trace of this error in plain text."},
	{Name: "file.code_signature.digest_algorithm", DataType: "keyword", Description: "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm."},
	{Name: "file.code_signature.timestamp", DataType: "date", Description: "Date and time when the code signature was generated and signed."},
	{Name: "file.fork_name", DataType: "keyword", Description: "A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name."},
	{Name: "http.request.body.content", DataType: "wildcard", Description: "The full HTTP request body."},
	{Name: "http.response.body.content", DataType: "wildcard", Description: "The full HTTP response body."},
	{Name: "message", DataType: "match_only_text", Description: "For log events the message field contains the log message, optimized for viewing in a log viewer.\nFor structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.\nIf multiple messages exist, they can be combined into one message."},
	{Name: "process.code_signature.digest_algorithm", DataType: "keyword", Description: "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm."},
	{Name: "process.code_signature.timestamp", DataType: "date", Description: "Date and time when the code signature was generated and signed."},
	{Name: "process.command_line", DataType: "wildcard", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.end", DataType: "date", Description: "The time the process ended."},
	{Name: "process.parent.code_signature.digest_algorithm", DataType: "keyword", Description: "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm."},
	{Name: "process.parent.code_signature.timestamp", DataType: "date", Description: "Date and time when the code signature was generated and signed."},
	{Name: "process.parent.command_line", DataType: "wildcard", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.parent.end", DataType: "date", Description: "The time the process ended."},
	{Name: "registry.data.strings", DataType: "wildcard", Array: true, Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "service.address", DataType: "keyword", Description: "Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets)."},
	{Name: "service.environment", DataType: "keyword", Description: "Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment."},
	{Name: "threat.enrichments", DataType: "nested", Array: true, Description: "A list of associated indicators objects enriching the event, and the context of that association/enrichment."},
	{Name: "threat.enrichments.indicator.file.code_signature.digest_algorithm", DataType: "keyword", Description: "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm."},
	{Name: "threat.enrichments.indicator.file.code_signature.timestamp", DataType: "date", Description: "Date and time when the code signature was generated and signed."},
	{Name: "threat.enrichments.indicator.file.fork_name", DataType: "keyword", Description: "A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name."},
	{Name: "threat.enrichments.indicator.file.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "threat.enrichments.indicator.file.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "threat.enrichments.indicator.file.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "threat.enrichments.indicator.file.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "threat.enrichments.indicator.file.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "threat.enrichments.indicator.file.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "threat.enrichments.indicator.file.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.file.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.file.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.file.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "threat.enrichments.indicator.file.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.file.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "threat.enrichments.indicator.registry.data.strings", DataType: "wildcard", Array: true, Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "threat.enrichments.indicator.url.full", DataType: "wildcard", Description: "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source."},
	{Name: "threat.enrichments.indicator.url.original", DataType: "wildcard", Description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."},
	{Name: "threat.enrichments.indicator.url.path", DataType: "wildcard", Description: "Path of the request, such as \"/search\"."},
	{Name: "threat.group.alias", DataType: "keyword", Array: true, Description: "The alias(es) of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group alias(es)."},
	{Name: "threat.group.id", DataType: "keyword", Description: "The id of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group id."},
	{Name: "threat.group.name", DataType: "keyword", Description: "The name of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group name."},
	{Name: "threat.group.reference", DataType: "keyword", Description: "The reference URL of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group reference URL."},
	{Name: "threat.indicator.file.code_signature.digest_algorithm", DataType: "keyword", Description: "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm."},
	{Name: "threat.indicator.file.code_signature.timestamp", DataType: "date", Description: "Date and time when the code signature was generated and signed."},
	{Name: "threat.indicator.file.fork_name", DataType: "keyword", Description: "A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name."},
	{Name: "threat.indicator.file.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "threat.indicator.file.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "threat.indicator.file.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "threat.indicator.file.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "threat.indicator.file.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "threat.indicator.file.pe.architecture", DataType: "keyword", Description: "CPU architecture target for the file."},
	{Name: "threat.indicator.file.pe.company", DataType: "keyword", Description: "Internal company name of the file, provided at compile-time."},
	{Name: "threat.indicator.file.pe.description", DataType: "keyword", Description: "Internal description of the file, provided at compile-time."},
	{Name: "threat.indicator.file.pe.file_version", DataType: "keyword", Description: "Internal version of the file, provided at compile-time."},
	{Name: "threat.indicator.file.pe.imphash", DataType: "keyword", Description: "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html."},
	{Name: "threat.indicator.file.pe.original_file_name", DataType: "keyword", Description: "Internal name of the file, provided at compile-time."},
	{Name: "threat.indicator.file.pe.product", DataType: "keyword", Description: "Internal product name of the file, provided at compile-time."},
	{Name: "threat.indicator.registry.data.strings", DataType: "wildcard", Array: true, Description: "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`)."},
	{Name: "threat.indicator.url.full", DataType: "wildcard", Description: "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source."},
	{Name: "threat.indicator.url.original", DataType: "wildcard", Description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."},
	{Name: "threat.indicator.url.path", DataType: "wildcard", Description: "Path of the request, such as \"/search\"."},
	{Name: "threat.software.alias", DataType: "keyword", Array: true, Description: "The alias(es) of the software for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® associated software description."},
	{Name: "threat.software.id", DataType: "keyword", Description: "The id of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software id."},
	{Name: "threat.software.name", DataType: "keyword", Description: "The name of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software name."},
	{Name: "threat.software.platforms", DataType: "keyword", Array: true, Description: "The platforms of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nRecommended Values:\n  * AWS\n  * Azure\n  * Azure AD\n  * GCP\n  * Linux\n  * macOS\n  * Network\n  * Office 365\n  * SaaS\n  * Windows\n\nWhile not required, you can use a MITRE ATT&CK® software platforms."},
	{Name: "threat.software.reference", DataType: "keyword", Description: "The reference URL of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software reference URL."},
	{Name: "threat.software.type", DataType: "keyword", Description: "The type of software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nRecommended values\n  * Malware\n  * Tool\n\n While not required, you can use a MITRE ATT&CK® software type."},
	{Name: "url.full", DataType: "wildcard", Description: "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source."},
	{Name: "url.original", DataType: "wildcard", Description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."},
	{Name: "url.path", DataType: "wildcard", Description: "Path of the request, such as \"/search\"."},
	// ECS v1.12.1
	{Name: "threat.enrichments.indicator.file.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "threat.enrichments.indicator.file.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.file.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "threat.enrichments.indicator.file.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.file.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.enrichments.indicator.file.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.file.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "threat.enrichments.indicator.file.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.enrichments.indicator.file.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "threat.enrichments.indicator.file.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "threat.enrichments.indicator.file.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "threat.enrichments.indicator.file.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "threat.enrichments.indicator.file.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "threat.enrichments.indicator.file.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "threat.enrichments.indicator.file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "threat.enrichments.indicator.file.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "threat.enrichments.indicator.file.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "threat.enrichments.indicator.file.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "threat.enrichments.indicator.file.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "threat.enrichments.indicator.file.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.enrichments.indicator.file.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "threat.enrichments.indicator.file.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "threat.enrichments.indicator.file.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.enrichments.indicator.file.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	{Name: "threat.indicator.file.x509.alternative_names", DataType: "keyword", Array: true, Description: "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses."},
	{Name: "threat.indicator.file.x509.issuer.common_name", DataType: "keyword", Array: true, Description: "List of common name (CN) of issuing certificate authority."},
	{Name: "threat.indicator.file.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country (C) codes"},
	{Name: "threat.indicator.file.x509.issuer.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of issuing certificate authority."},
	{Name: "threat.indicator.file.x509.issuer.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.indicator.file.x509.issuer.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of issuing certificate authority."},
	{Name: "threat.indicator.file.x509.issuer.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of issuing certificate authority."},
	{Name: "threat.indicator.file.x509.issuer.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.indicator.file.x509.not_after", DataType: "date", Description: "Time at which the certificate is no longer considered valid."},
	{Name: "threat.indicator.file.x509.not_before", DataType: "date", Description: "Time at which the certificate is first considered valid."},
	{Name: "threat.indicator.file.x509.public_key_algorithm", DataType: "keyword", Description: "Algorithm used to generate the public key."},
	{Name: "threat.indicator.file.x509.public_key_curve", DataType: "keyword", Description: "The curve used by the elliptic curve public key algorithm. This is algorithm specific."},
	{Name: "threat.indicator.file.x509.public_key_exponent", DataType: "long", Description: "Exponent used to derive the public key. This is algorithm specific."},
	{Name: "threat.indicator.file.x509.public_key_size", DataType: "long", Description: "The size of the public key space in bits."},
	{Name: "threat.indicator.file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters."},
	{Name: "threat.indicator.file.x509.signature_algorithm", DataType: "keyword", Description: "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353."},
	{Name: "threat.indicator.file.x509.subject.common_name", DataType: "keyword", Array: true, Description: "List of common names (CN) of subject."},
	{Name: "threat.indicator.file.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country (C) code"},
	{Name: "threat.indicator.file.x509.subject.distinguished_name", DataType: "keyword", Description: "Distinguished name (DN) of the certificate subject entity."},
	{Name: "threat.indicator.file.x509.subject.locality", DataType: "keyword", Array: true, Description: "List of locality names (L)"},
	{Name: "threat.indicator.file.x509.subject.organization", DataType: "keyword", Array: true, Description: "List of organizations (O) of subject."},
	{Name: "threat.indicator.file.x509.subject.organizational_unit", DataType: "keyword", Array: true, Description: "List of organizational units (OU) of subject."},
	{Name: "threat.indicator.file.x509.subject.state_or_province", DataType: "keyword", Array: true, Description: "List of state or province names (ST, S, or P)"},
	{Name: "threat.indicator.file.x509.version_number", DataType: "keyword", Description: "Version of x509 format."},
	// ECS v8.0.0
	{Name: "client.domain", DataType: "keyword", Description: "The domain name of the client system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment."},
	{Name: "cloud.origin.account.id", DataType: "keyword", Description: "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier."},
	{Name: "cloud.origin.account.name", DataType: "keyword", Description: "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name."},
	{Name: "cloud.origin.availability_zone", DataType: "keyword", Description: "Availability zone in which this host, resource, or service is located."},
	{Name: "cloud.origin.instance.id", DataType: "keyword", Description: "Instance ID of the host machine."},
	{Name: "cloud.origin.instance.name", DataType: "keyword", Description: "Instance name of the host machine."},
	{Name: "cloud.origin.machine.type", DataType: "keyword", Description: "Machine type of the host machine."},
	{Name: "cloud.origin.project.id", DataType: "keyword", Description: "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id."},
	{Name: "cloud.origin.project.name", DataType: "keyword", Description: "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name."},
	{Name: "cloud.origin.provider", DataType: "keyword", Description: "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean."},
	{Name: "cloud.origin.region", DataType: "keyword", Description: "Region in which this host, resource, or service is located."},
	{Name: "cloud.origin.service.name", DataType: "keyword", Description: "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda."},
	{Name: "cloud.target.account.id", DataType: "keyword", Description: "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier."},
	{Name: "cloud.target.account.name", DataType: "keyword", Description: "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name."},
	{Name: "cloud.target.availability_zone", DataType: "keyword", Description: "Availability zone in which this host, resource, or service is located."},
	{Name: "cloud.target.instance.id", DataType: "keyword", Description: "Instance ID of the host machine."},
	{Name: "cloud.target.instance.name", DataType: "keyword", Description: "Instance name of the host machine."},
	{Name: "cloud.target.machine.type", DataType: "keyword", Description: "Machine type of the host machine."},
	{Name: "cloud.target.project.id", DataType: "keyword", Description: "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id."},
	{Name: "cloud.target.project.name", DataType: "keyword", Description: "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name."},
	{Name: "cloud.target.provider", DataType: "keyword", Description: "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean."},
	{Name: "cloud.target.region", DataType: "keyword", Description: "Region in which this host, resource, or service is located."},
	{Name: "cloud.target.service.name", DataType: "keyword", Description: "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda."},
	{Name: "destination.domain", DataType: "keyword", Description: "The domain name of the destination system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment."},
	{Name: "faas.coldstart", DataType: "boolean", Description: "Boolean value indicating a cold start of a function."},
	{Name: "faas.execution", DataType: "keyword", Description: "The execution ID of the current function execution."},
	{Name: "faas.trigger", DataType: "nested", Description: "Details about the function trigger."},
	{Name: "faas.trigger.request_id", DataType: "keyword", Description: "The ID of the trigger request , message, event, etc."},
	{Name: "faas.trigger.type", DataType: "keyword", Description: "The trigger for the function execution.\nExpected values are:\n  * http\n  * pubsub\n  * datasource\n  * timer\n  * other"},
	{Name: "http.request.method", DataType: "keyword", Description: "HTTP request method.\nThe value should retain its casing from the original event. For example, `GET`, `get`, and `GeT` are all considered valid values for this field."},
	{Name: "log.origin.file.line", DataType: "long", Description: "The line number of the file containing the source code which originated the log event."},
	{Name: "network.application", DataType: "keyword", Description: "When a specific application or service is identified from network connection details (source/dest IPs, ports, certificates, or wire format), this field captures the application's or service's name.\nFor example, the original event identifies the network connection being from a specific web service in a `https` network connection, like `facebook` or `twitter`.\nThe field value must be normalized to lowercase for querying."},
	{Name: "network.protocol", DataType: "keyword", Description: "In the OSI Model this would be the Application Layer protocol. For example, `http`, `dns`, or `ssh`.\nThe field value must be normalized to lowercase for querying."},
	{Name: "network.transport", DataType: "keyword", Description: "Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)\nThe field value must be normalized to lowercase for querying."},
	{Name: "network.type", DataType: "keyword", Description: "In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc\nThe field value must be normalized to lowercase for querying."},
	{Name: "server.domain", DataType: "keyword", Description: "The domain name of the server system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment."},
	{Name: "service.origin.address", DataType: "keyword", Description: "Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets)."},
	{Name: "service.origin.environment", DataType: "keyword", Description: "Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment."},
	{Name: "service.origin.ephemeral_id", DataType: "keyword", Description: "Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not."},
	{Name: "service.origin.id", DataType: "keyword", Description: "Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead."},
	{Name: "service.origin.name", DataType: "keyword", Description: "Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified."},
	{Name: "service.origin.node.name", DataType: "keyword", Description: "Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set."},
	{Name: "service.origin.state", DataType: "keyword", Description: "Current state of the service."},
	{Name: "service.origin.type", DataType: "keyword", Description: "The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`."},
	{Name: "service.origin.version", DataType: "keyword", Description: "Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service."},
	{Name: "service.target.address", DataType: "keyword", Description: "Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets)."},
	{Name: "service.target.environment", DataType: "keyword", Description: "Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment."},
	{Name: "service.target.ephemeral_id", DataType: "keyword", Description: "Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not."},
	{Name: "service.target.id", DataType: "keyword", Description: "Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead."},
	{Name: "service.target.name", DataType: "keyword", Description: "Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified."},
	{Name: "service.target.node.name", DataType: "keyword", Description: "Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set."},
	{Name: "service.target.state", DataType: "keyword", Description: "Current state of the service."},
	{Name: "service.target.type", DataType: "keyword", Description: "The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`."},
	{Name: "service.target.version", DataType: "keyword", Description: "Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service."},
	{Name: "source.domain", DataType: "keyword", Description: "The domain name of the source system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment."},
	{Name: "threat.enrichments.indicator.confidence", DataType: "keyword", Description: "Identifies\u00a0the\u00a0vendor-neutral confidence\u00a0rating\u00a0using\u00a0the None/Low/Medium/High\u00a0scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.\nExpected values are:\n  * Not Specified\n  * None\n  * Low\n  * Medium\n  * High"},
	{Name: "threat.indicator.confidence", DataType: "keyword", Description: "Identifies\u00a0the\u00a0vendor-neutral confidence\u00a0rating\u00a0using\u00a0the None/Low/Medium/High\u00a0scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.\nExpected values are:\n  * Not Specified\n  * None\n  * Low\n  * Medium\n  * High"},
	// ECS v8.1.0
	{Name: "dll.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "dll.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "dll.pe.pehash", DataType: "keyword", Description: "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html."},
	{Name: "email.attachments", DataType: "nested", Array: true, Description: "A list of objects describing the attachment files sent along with an email message."},
	{Name: "email.attachments.file.extension", DataType: "keyword", Description: "Attachment file extension, excluding the leading dot."},
	{Name: "email.attachments.file.hash.md5", DataType: "keyword", Description: "MD5 hash."},
	{Name: "email.attachments.file.hash.sha1", DataType: "keyword", Description: "SHA1 hash."},
	{Name: "email.attachments.file.hash.sha256", DataType: "keyword", Description: "SHA256 hash."},
	{Name: "email.attachments.file.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "email.attachments.file.hash.sha512", DataType: "keyword", Description: "SHA512 hash."},
	{Name: "email.attachments.file.hash.ssdeep", DataType: "keyword", Description: "SSDEEP hash."},
	{Name: "email.attachments.file.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "email.attachments.file.mime_type", DataType: "keyword", Description: "The MIME media type of the attachment.\nThis value will typically be extracted from the `Content-Type` MIME header field."},
	{Name: "email.attachments.file.name", DataType: "keyword", Description: "Name of the attachment file including the file extension."},
	{Name: "email.attachments.file.size", DataType: "long", Description: "Attachment file size in bytes."},
	{Name: "email.bcc.address", DataType: "keyword", Array: true, Description: "The email address of BCC recipient"},
	{Name: "email.cc.address", DataType: "keyword", Array: true, Description: "The email address of CC recipient"},
	{Name: "email.content_type", DataType: "keyword", Description: "Information about how the message is to be displayed.\nTypically a MIME type."},
	{Name: "email.delivery_timestamp", DataType: "date", Description: "The date and time when the email message was received by the service or client."},
	{Name: "email.direction", DataType: "keyword", Description: "The direction of the message based on the sending and receiving domains."},
	{Name: "email.from.address", DataType: "keyword", Array: true, Description: "The email address of the sender, typically from the RFC 5322 `From:` header field."},
	{Name: "email.local_id", DataType: "keyword", Description: "Unique identifier given to the email by the source that created the event.\nIdentifier is not persistent across hops."},
	{Name: "email.message_id", DataType: "wildcard", Description: "Identifier from the RFC 5322 `Message-ID:` email header that refers to a particular email message."},
	{Name: "email.origination_timestamp", DataType: "date", Description: "The date and time the email message was composed. Many email clients will fill in this value automatically when the message is sent by a user."},
	{Name: "email.reply_to.address", DataType: "keyword", Array: true, Description: "The address that replies should be delivered to based on the value in the RFC 5322 `Reply-To:` header."},
	{Name: "email.sender.address", DataType: "keyword", Description: "Per RFC 5322, specifies the address responsible for the actual transmission of the message."},
	{Name: "email.subject", DataType: "keyword", Description: "A brief summary of the topic of the message."},
	{Name: "email.to.address", DataType: "keyword", Array: true, Description: "The email address of recipient"},
	{Name: "email.x_mailer", DataType: "keyword", Description: "The name of the application that was used to draft and send the original email message."},
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:authentication|configuration|database|driver|email|file|host|iam|intrusion_detection|malware|network|package|process|registry|session|threat|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "file.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "file.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "file.pe.pehash", DataType: "keyword", Description: "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html."},
	{Name: "process.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "process.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "process.parent.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "process.parent.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "process.parent.pe.pehash", DataType: "keyword", Description: "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html."},
	{Name: "process.pe.pehash", DataType: "keyword", Description: "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html."},
	{Name: "threat.enrichments.indicator.file.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "threat.enrichments.indicator.file.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "threat.enrichments.indicator.file.pe.pehash", DataType: "keyword", Description: "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html."},
	{Name: "threat.enrichments.matched.occurred", DataType: "date", Description: "Indicates when the indicator match was generated"},
	{Name: "threat.indicator.file.hash.sha384", DataType: "keyword", Description: "SHA384 hash."},
	{Name: "threat.indicator.file.hash.tlsh", DataType: "keyword", Description: "TLSH hash."},
	{Name: "threat.indicator.file.pe.pehash", DataType: "keyword", Description: "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html."},
	// ECS v8.2.0
	{Name: "container.cpu.usage", DataType: "scaled_float", Description: "Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1. Scaling factor: 1000."},
	{Name: "container.disk.read.bytes", DataType: "long", Description: "The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection."},
	{Name: "container.disk.write.bytes", DataType: "long", Description: "The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection."},
	{Name: "container.memory.usage", DataType: "scaled_float", Description: "Memory usage percentage and it ranges from 0 to 1. Scaling factor: 1000."},
	{Name: "container.network.egress.bytes", DataType: "long", Description: "The number of bytes (gauge) sent out on all network interfaces by the container since the last metric collection."},
	{Name: "container.network.ingress.bytes", DataType: "long", Description: "The number of bytes received (gauge) on all network interfaces by the container since the last metric collection."},
	{Name: "faas.id", DataType: "keyword", Description: "The unique identifier of a serverless function.\nFor AWS Lambda it's the function ARN (Amazon Resource Name) without a version or alias suffix."},
	{Name: "faas.name", DataType: "keyword", Description: "The name of a serverless function."},
	{Name: "faas.version", DataType: "keyword", Description: "The version of a serverless function."},
	{Name: "host.boot.id", DataType: "keyword", Description: "Linux boot uuid taken from /proc/sys/kernel/random/boot_id. Note the boot_id value from /proc may or may not be the same in containers as on the host. Some container runtimes will bind mount a new boot_id value onto the proc file in each container."},
	{Name: "host.pid_ns_ino", DataType: "keyword", Description: "This is the inode number of the namespace in the namespace file system (nsfs). Unsigned int inum in include/linux/ns_common.h."},
	{Name: "log.syslog.appname", DataType: "keyword", Description: "The device or application that originated the Syslog message, if available."},
	{Name: "log.syslog.hostname", DataType: "keyword", Description: "The hostname, FQDN, or IP of the machine that originally sent the Syslog message. This is sourced from the hostname field of the syslog header. Depending on the environment, this value may be different from the host that handled the event, especially if the host handling the events is acting as a collector."},
	{Name: "log.syslog.msgid", DataType: "keyword", Description: "An identifier for the type of Syslog message, if available. Only applicable for RFC 5424 messages."},
	{Name: "log.syslog.procid", DataType: "keyword", Description: "The process name or ID that originated the Syslog message, if available."},
	{Name: "log.syslog.structured_data", DataType: "flattened", Description: "Structured data expressed in RFC 5424 messages, if available. These are key-value pairs formed from the structured data portion of the syslog message, as defined in RFC 5424 Section 6.3."},
	{Name: "log.syslog.version", DataType: "keyword", Description: "The version of the Syslog protocol specification. Only applicable for RFC 5424 messages."},
	{Name: "process.entry_leader.args", DataType: "keyword", Array: true, Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.entry_leader.args_count", DataType: "long", Description: "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity."},
	{Name: "process.entry_leader.command_line", DataType: "wildcard", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.entry_leader.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.entry_leader.entry_meta.source.ip", DataType: "ip", Description: "IP address of the source (IPv4 or IPv6)."},
	{Name: "process.entry_leader.entry_meta.type", DataType: "keyword", Description: "The entry type for the entry session leader. Values include: init(e.g systemd), sshd, ssm, kubelet, teleport, terminal, console"},
	{Name: "process.entry_leader.executable", DataType: "keyword", Description: "Absolute path to the process executable."},
	{Name: "process.entry_leader.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.entry_leader.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.entry_leader.interactive", DataType: "boolean", Description: "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY."},
	{Name: "process.entry_leader.name", DataType: "keyword", Description: "Process name.\nSometimes called program name or similar."},
	{Name: "process.entry_leader.parent.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.entry_leader.parent.pid", DataType: "long", Description: "Process id."},
	{Name: "process.entry_leader.parent.session_leader.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.entry_leader.parent.session_leader.pid", DataType: "long", Description: "Process id."},
	{Name: "process.entry_leader.parent.session_leader.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.entry_leader.parent.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.entry_leader.pid", DataType: "long", Description: "Process id."},
	{Name: "process.entry_leader.real_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.entry_leader.real_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.entry_leader.real_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.entry_leader.real_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.entry_leader.same_as_process", DataType: "boolean", Description: "This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`."},
	{Name: "process.entry_leader.saved_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.entry_leader.saved_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.entry_leader.saved_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.entry_leader.saved_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.entry_leader.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.entry_leader.supplemental_groups.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.entry_leader.supplemental_groups.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.entry_leader.tty", DataType: "object", Description: "Information about the controlling TTY device. If set, the process belongs to an interactive session."},
	{Name: "process.entry_leader.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0. For more details, please refer to the Linux kernel documentation."},
	{Name: "process.entry_leader.tty.char_device.minor", DataType: "long", Description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."},
	{Name: "process.entry_leader.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.entry_leader.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.entry_leader.working_directory", DataType: "keyword", Description: "The working directory of the process."},
	{Name: "process.env_vars", DataType: "object", Description: "Environment variables (`env_vars`) set at the time of the event. May be filtered to protect sensitive information.\nThe field should not contain nested objects. All values should use `keyword`."},
	{Name: "process.group_leader.args", DataType: "keyword", Array: true, Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.group_leader.args_count", DataType: "long", Description: "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity."},
	{Name: "process.group_leader.command_line", DataType: "wildcard", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.group_leader.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.group_leader.executable", DataType: "keyword", Description: "Absolute path to the process executable."},
	{Name: "process.group_leader.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.group_leader.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.group_leader.interactive", DataType: "boolean", Description: "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY."},
	{Name: "process.group_leader.name", DataType: "keyword", Description: "Process name.\nSometimes called program name or similar."},
	{Name: "process.group_leader.pid", DataType: "long", Description: "Process id."},
	{Name: "process.group_leader.real_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.group_leader.real_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.group_leader.real_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.group_leader.real_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.group_leader.same_as_process", DataType: "boolean", Description: "This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`."},
	{Name: "process.group_leader.saved_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.group_leader.saved_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.group_leader.saved_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.group_leader.saved_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.group_leader.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.group_leader.supplemental_groups.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.group_leader.supplemental_groups.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.group_leader.tty", DataType: "object", Description: "Information about the controlling TTY device. If set, the process belongs to an interactive session."},
	{Name: "process.group_leader.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0. For more details, please refer to the Linux kernel documentation."},
	{Name: "process.group_leader.tty.char_device.minor", DataType: "long", Description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."},
	{Name: "process.group_leader.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.group_leader.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.group_leader.working_directory", DataType: "keyword", Description: "The working directory of the process."},
	{Name: "process.interactive", DataType: "boolean", Description: "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY."},
	{Name: "process.parent.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.parent.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.parent.group_leader.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.parent.group_leader.pid", DataType: "long", Description: "Process id."},
	{Name: "process.parent.group_leader.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.parent.interactive", DataType: "boolean", Description: "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY."},
	{Name: "process.parent.pgid", DataType: "long", Description: "Deprecated for removal in next major version release. This field is superseded by `process.group_leader.pid`.\nIdentifier of the group of processes the process belongs to."},
	{Name: "process.parent.real_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.parent.real_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.parent.real_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.parent.real_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.parent.saved_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.parent.saved_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.parent.saved_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.parent.saved_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.parent.supplemental_groups.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.parent.supplemental_groups.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.parent.tty", DataType: "object", Description: "Information about the controlling TTY device. If set, the process belongs to an interactive session."},
	{Name: "process.parent.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0. For more details, please refer to the Linux kernel documentation."},
	{Name: "process.parent.tty.char_device.minor", DataType: "long", Description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."},
	{Name: "process.parent.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.parent.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.pgid", DataType: "long", Description: "Deprecated for removal in next major version release. This field is superseded by `process.group_leader.pid`.\nIdentifier of the group of processes the process belongs to."},
	{Name: "process.previous.args", DataType: "keyword", Array: true, Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.previous.args_count", DataType: "long", Description: "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity."},
	{Name: "process.previous.executable", DataType: "keyword", Description: "Absolute path to the process executable."},
	{Name: "process.real_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.real_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.real_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.real_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.saved_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.saved_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.saved_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.saved_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.session_leader.args", DataType: "keyword", Array: true, Description: "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information."},
	{Name: "process.session_leader.args_count", DataType: "long", Description: "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity."},
	{Name: "process.session_leader.command_line", DataType: "wildcard", Description: "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information."},
	{Name: "process.session_leader.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.session_leader.executable", DataType: "keyword", Description: "Absolute path to the process executable."},
	{Name: "process.session_leader.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.session_leader.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.session_leader.interactive", DataType: "boolean", Description: "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY."},
	{Name: "process.session_leader.name", DataType: "keyword", Description: "Process name.\nSometimes called program name or similar."},
	{Name: "process.session_leader.parent.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.session_leader.parent.pid", DataType: "long", Description: "Process id."},
	{Name: "process.session_leader.parent.session_leader.entity_id", DataType: "keyword", Description: "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts."},
	{Name: "process.session_leader.parent.session_leader.pid", DataType: "long", Description: "Process id."},
	{Name: "process.session_leader.parent.session_leader.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.session_leader.parent.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.session_leader.pid", DataType: "long", Description: "Process id."},
	{Name: "process.session_leader.real_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.session_leader.real_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.session_leader.real_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.session_leader.real_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.session_leader.same_as_process", DataType: "boolean", Description: "This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`."},
	{Name: "process.session_leader.saved_group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.session_leader.saved_group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.session_leader.saved_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.session_leader.saved_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.session_leader.start", DataType: "date", Description: "The time the process started."},
	{Name: "process.session_leader.supplemental_groups.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.session_leader.supplemental_groups.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.session_leader.tty", DataType: "object", Description: "Information about the controlling TTY device. If set, the process belongs to an interactive session."},
	{Name: "process.session_leader.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0. For more details, please refer to the Linux kernel documentation."},
	{Name: "process.session_leader.tty.char_device.minor", DataType: "long", Description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."},
	{Name: "process.session_leader.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.session_leader.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.session_leader.working_directory", DataType: "keyword", Description: "The working directory of the process."},
	{Name: "process.supplemental_groups.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.supplemental_groups.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.tty", DataType: "object", Description: "Information about the controlling TTY device. If set, the process belongs to an interactive session."},
	{Name: "process.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0. For more details, please refer to the Linux kernel documentation."},
	{Name: "process.tty.char_device.minor", DataType: "long", Description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."},
	{Name: "process.user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "threat.feed.dashboard_id", DataType: "keyword", Description: "The saved object ID of the dashboard belonging to the threat feed for displaying dashboard links to threat feeds in Kibana."},
	{Name: "threat.feed.description", DataType: "keyword", Description: "Description of the threat feed in a UI friendly format."},
	{Name: "threat.feed.name", DataType: "keyword", Description: "The name of the threat feed in UI friendly format."},
	{Name: "threat.feed.reference", DataType: "keyword", Description: "Reference information for the threat feed in a UI friendly format."},
	// ECS v8.2.1
	{Name: "agent.name", DataType: "keyword", Description: "Custom name of the agent.\nThis is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from."},
	{Name: "process.entry_leader.entry_meta.type", DataType: "keyword", Description: "The entry type for the entry session leader. Values include: init(e.g systemd), sshd, ssm, kubelet, teleport, terminal, console\nNote: This field is only set on process.session_leader."},
	// ECS v8.3.0
	{Name: "client.mac", DataType: "keyword", Pattern: "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", Description: "MAC address of the client.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "container.image.hash.all", DataType: "keyword", Array: true, Description: "An array of digests of the image the container was built on. Each digest consists of the hash algorithm and value in this format: `algorithm:value`. Algorithm names should align with the field names in the ECS hash field set."},
	{Name: "destination.mac", DataType: "keyword", Pattern: "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", Description: "MAC address of the destination.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "host.mac", DataType: "keyword", Array: true, Pattern: "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", Description: "Host MAC addresses.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "observer.mac", DataType: "keyword", Array: true, Pattern: "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", Description: "MAC addresses of the observer.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "orchestrator.cluster.id", DataType: "keyword", Description: "Unique ID of the cluster."},
	{Name: "orchestrator.resource.id", DataType: "keyword", Description: "Unique ID of the resource being acted upon."},
	{Name: "orchestrator.resource.ip", DataType: "ip", Array: true, Description: "IP address assigned to the resource associated with the event being observed. In the case of a Kubernetes Pod, this array would contain only one element: the IP of the Pod (as opposed to the Node on which the Pod is running)."},
	{Name: "orchestrator.resource.parent.type", DataType: "keyword", Description: "Type or kind of the parent resource associated with the event being observed. In Kubernetes, this will be the name of a built-in workload resource (e.g., Deployment, StatefulSet, DaemonSet)."},
	{Name: "server.mac", DataType: "keyword", Pattern: "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", Description: "MAC address of the server.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	{Name: "service.node.role", DataType: "keyword", Description: "Role of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background-tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.origin.node.role", DataType: "keyword", Description: "Role of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background-tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.target.node.role", DataType: "keyword", Description: "Role of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background-tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "source.mac", DataType: "keyword", Pattern: "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", Description: "MAC address of the source.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen."},
	// ECS v8.3.1
	{Name: "service.node.role", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background-tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.origin.node.role", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background-tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.target.node.role", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background-tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	// ECS v8.4.0
	{Name: "dns.header_flags", DataType: "keyword", Array: true, Pattern: "(?:AA|AD|CD|DO|RA|RD|TC)", Description: "Array of 2 letter DNS header flags."},
	{Name: "faas.trigger.type", DataType: "keyword", Pattern: "(?:datasource|http|other|pubsub|timer)", Description: "The trigger for the function execution."},
	{Name: "file.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "file.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "host.os.type", DataType: "keyword", Pattern: "(?:linux|macos|unix|windows)", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	{Name: "network.direction", DataType: "keyword", Pattern: "(?:egress|external|inbound|ingress|internal|outbound|unknown)", Description: "Direction of the network traffic.\nWhen mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values \"ingress\" or \"egress\".\nWhen mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values \"inbound\", \"outbound\", \"internal\" or \"external\".\nNote that \"internal\" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that \"external\" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers."},
	{Name: "observer.os.type", DataType: "keyword", Pattern: "(?:linux|macos|unix|windows)", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	{Name: "service.node.role", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.node.roles", DataType: "keyword", Array: true, Description: "Roles of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks` or both.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data` or both.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.origin.node.role", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.origin.node.roles", DataType: "keyword", Array: true, Description: "Roles of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks` or both.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data` or both.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.target.node.role", DataType: "keyword", Description: "Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "service.target.node.roles", DataType: "keyword", Array: true, Description: "Roles of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks` or both.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data` or both.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service."},
	{Name: "threat.enrichments.indicator.confidence", DataType: "keyword", Pattern: "(?:High|Low|Medium|None|Not Specified)", Description: "Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields."},
	{Name: "threat.enrichments.indicator.file.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "threat.enrichments.indicator.file.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "threat.enrichments.indicator.marking.tlp", DataType: "keyword", Pattern: "(?:AMBER|GREEN|RED|WHITE)", Description: "Traffic Light Protocol sharing markings."},
	{Name: "threat.enrichments.indicator.type", DataType: "keyword", Pattern: "(?:artifact|autonomous-system|directory|domain-name|email-addr|file|ipv4-addr|ipv6-addr|mac-addr|mutex|port|process|software|url|user-account|windows-registry-key|x509-certificate)", Description: "Type of indicator as represented by Cyber Observable in STIX 2.0."},
	{Name: "threat.enrichments.indicator.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "threat.enrichments.indicator.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "threat.indicator.confidence", DataType: "keyword", Pattern: "(?:High|Low|Medium|None|Not Specified)", Description: "Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields."},
	{Name: "threat.indicator.file.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "threat.indicator.file.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "threat.indicator.marking.tlp", DataType: "keyword", Pattern: "(?:AMBER|GREEN|RED|WHITE)", Description: "Traffic Light Protocol sharing markings."},
	{Name: "threat.indicator.type", DataType: "keyword", Pattern: "(?:artifact|autonomous-system|directory|domain-name|email-addr|file|ipv4-addr|ipv6-addr|mac-addr|mutex|port|process|software|url|user-account|windows-registry-key|x509-certificate)", Description: "Type of indicator as represented by Cyber Observable in STIX 2.0."},
	{Name: "threat.indicator.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "threat.indicator.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "threat.software.platforms", DataType: "keyword", Array: true, Pattern: "(?:AWS|Azure|Azure AD|GCP|Linux|Network|Office 365|SaaS|Windows|macOS)", Description: "The platforms of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use MITRE ATT&CK® software platform values."},
	{Name: "threat.software.type", DataType: "keyword", Pattern: "(?:Malware|Tool)", Description: "The type of software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software type."},
	{Name: "tls.client.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "tls.client.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "tls.server.x509.issuer.country", DataType: "keyword", Array: true, Description: "List of country \\(C) codes"},
	{Name: "tls.server.x509.subject.country", DataType: "keyword", Array: true, Description: "List of country \\(C) code"},
	{Name: "user_agent.os.type", DataType: "keyword", Pattern: "(?:linux|macos|unix|windows)", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	// ECS v8.5.0
	{Name: "host.os.type", DataType: "keyword", Pattern: "(?:android|ios|linux|macos|unix|windows)", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	{Name: "host.risk.calculated_level", DataType: "keyword", Description: "A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "host.risk.calculated_score", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "host.risk.calculated_score_norm", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100."},
	{Name: "host.risk.static_level", DataType: "keyword", Description: "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "host.risk.static_score", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "host.risk.static_score_norm", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100."},
	{Name: "observer.os.type", DataType: "keyword", Pattern: "(?:android|ios|linux|macos|unix|windows)", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	{Name: "process.entry_leader.attested_groups.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.entry_leader.attested_user.id", DataType: "keyword", Description: "Unique identifier of the user."},
	{Name: "process.entry_leader.attested_user.name", DataType: "keyword", Description: "Short name or login of the user."},
	{Name: "process.entry_leader.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation."},
	{Name: "process.env_vars", DataType: "keyword", Array: true, Description: "Array of environment variable bindings. Captured from a snapshot of the environment at the time of execution.\nMay be filtered to protect sensitive information."},
	{Name: "process.group_leader.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation."},
	{Name: "process.io", DataType: "object", Description: "A chunk of input or output (IO) from a single process.\nThis field only appears on the top level process object, which is the process that wrote the output or read the input."},
	{Name: "process.io.bytes_skipped", DataType: "object", Array: true, Description: "An array of byte offsets and lengths denoting where IO data has been skipped."},
	{Name: "process.io.bytes_skipped.length", DataType: "number", Description: "The length of bytes skipped."},
	{Name: "process.io.bytes_skipped.offset", DataType: "number", Description: "The byte offset into this event's io.text (or io.bytes in the future) where length bytes were skipped."},
	{Name: "process.io.max_bytes_per_process_exceeded", DataType: "boolean", Description: "If true, the process producing the output has exceeded the max_kilobytes_per_process configuration setting."},
	{Name: "process.io.text", DataType: "wildcard", Description: "A chunk of output or input sanitized to UTF-8.\nBest efforts are made to ensure complete lines are captured in these events. Assumptions should NOT be made that multiple lines will appear in the same event. TTY output may contain terminal control codes such as for cursor movement, so some string queries may not match due to terminal codes inserted between characters of a word."},
	{Name: "process.io.total_bytes_captured", DataType: "number", Description: "The total number of bytes captured in this event."},
	{Name: "process.io.total_bytes_skipped", DataType: "number", Description: "The total number of bytes that were not captured due to implementation restrictions such as buffer size limits. Implementors should strive to ensure this value is always zero"},
	{Name: "process.io.type", DataType: "keyword", Description: "The type of object on which the IO action (read or write) was taken.\nCurrently only 'tty' is supported. Other types may be added in the future for 'file' and 'socket' support."},
	{Name: "process.parent.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation."},
	{Name: "process.session_leader.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation."},
	{Name: "process.tty.char_device.major", DataType: "long", Description: "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation."},
	{Name: "process.tty.columns", DataType: "long", Description: "The number of character columns per line. e.g terminal width\nTerminal sizes can change, so this value reflects the maximum value for a given IO event. i.e. where event.action = 'text_output'"},
	{Name: "process.tty.rows", DataType: "long", Description: "The number of character rows in the terminal. e.g terminal height\nTerminal sizes can change, so this value reflects the maximum value for a given IO event. i.e. where event.action = 'text_output'"},
	{Name: "user.risk.calculated_level", DataType: "keyword", Description: "A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.risk.calculated_score", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.risk.calculated_score_norm", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100."},
	{Name: "user.risk.static_level", DataType: "keyword", Description: "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.risk.static_score", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.risk.static_score_norm", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100."},
	{Name: "user_agent.os.type", DataType: "keyword", Pattern: "(?:android|ios|linux|macos|unix|windows)", Description: "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition."},
	// ECS v8.5.2
	{Name: "process.io.bytes_skipped.length", DataType: "long", Description: "The length of bytes skipped."},
	{Name: "process.io.bytes_skipped.offset", DataType: "long", Description: "The byte offset into this event's io.text (or io.bytes in the future) where length bytes were skipped."},
	{Name: "process.io.total_bytes_captured", DataType: "long", Description: "The total number of bytes captured in this event."},
	{Name: "process.io.total_bytes_skipped", DataType: "long", Description: "The total number of bytes that were not captured due to implementation restrictions such as buffer size limits. Implementors should strive to ensure this value is always zero"},
	// ECS v8.6.0
	{Name: "device.id", DataType: "keyword", Description: "The unique identifier of a device. The identifier must not change across application sessions but stay fixex for an instance of a (mobile) device. \nOn iOS, this value must be equal to the vendor identifier (https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android, this value must be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application.\nFor GDPR and data protection law reasons this identifier should not carry information that would allow to identify a user."},
	{Name: "device.manufacturer", DataType: "keyword", Description: "The vendor name of the device manufacturer."},
	{Name: "device.model.identifier", DataType: "keyword", Description: "The machine readable identifier of the device model."},
	{Name: "device.model.name", DataType: "keyword", Description: "The human readable marketing name of the device model."},
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:authentication|configuration|database|driver|email|file|host|iam|intrusion_detection|malware|network|package|process|registry|session|threat|vulnerability|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "threat.enrichments.indicator.marking.tlp.version", DataType: "keyword", Description: "Traffic Light Protocol version."},
	{Name: "threat.indicator.marking.tlp", DataType: "keyword", Pattern: "(?:AMBER|AMBER+STRICT|CLEAR|GREEN|RED|WHITE)", Description: "Traffic Light Protocol sharing markings."},
	{Name: "threat.threat.indicator.marking.tlp.version", DataType: "keyword", Description: "Traffic Light Protocol version."},
	// ECS v8.6.1
	{Name: "threat.enrichments.indicator.marking.tlp", DataType: "keyword", Pattern: "(?:AMBER|AMBER+STRICT|CLEAR|GREEN|RED|WHITE)", Description: "Traffic Light Protocol sharing markings."},
	{Name: "threat.enrichments.indicator.marking.tlp_version", DataType: "keyword", Description: "Traffic Light Protocol version."},
	{Name: "threat.indicator.marking.tlp_version", DataType: "keyword", Description: "Traffic Light Protocol version."},
	// ECS v8.7.0
	{Name: "dll.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "dll.pe.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "dll.pe.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "dll.pe.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "dll.pe.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "dll.pe.import_hash", DataType: "keyword", Description: "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash."},
	{Name: "dll.pe.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "dll.pe.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "dll.pe.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "dll.pe.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`."},
	{Name: "dll.pe.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "dll.pe.sections.name", DataType: "keyword", Description: "PE Section List name."},
	{Name: "dll.pe.sections.physical_size", DataType: "long", Description: "PE Section List physical size."},
	{Name: "dll.pe.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "dll.pe.sections.virtual_size", DataType: "long", Description: "PE Section List virtual size. This is always the same as `physical_size`."},
	{Name: "event.category", DataType: "keyword", Array: true, Pattern: "(?:api|authentication|configuration|database|driver|email|file|host|iam|intrusion_detection|library|malware|network|package|process|registry|session|threat|vulnerability|web)", Description: "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories."},
	{Name: "file.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "file.elf.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "file.elf.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "file.elf.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "file.elf.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "file.elf.import_hash", DataType: "keyword", Description: "A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash."},
	{Name: "file.elf.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "file.elf.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "file.elf.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "file.macho.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "file.macho.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "file.macho.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "file.macho.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "file.macho.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "file.macho.import_hash", DataType: "keyword", Description: "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash."},
	{Name: "file.macho.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "file.macho.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "file.macho.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "file.macho.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`."},
	{Name: "file.macho.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "file.macho.sections.name", DataType: "keyword", Description: "Mach-O Section List name."},
	{Name: "file.macho.sections.physical_size", DataType: "long", Description: "Mach-O Section List physical size."},
	{Name: "file.macho.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "file.macho.sections.virtual_size", DataType: "long", Description: "Mach-O Section List virtual size. This is always the same as `physical_size`."},
	{Name: "file.macho.symhash", DataType: "keyword", Description: "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash"},
	{Name: "file.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "file.pe.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "file.pe.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "file.pe.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "file.pe.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "file.pe.import_hash", DataType: "keyword", Description: "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash."},
	{Name: "file.pe.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "file.pe.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "file.pe.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "file.pe.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`."},
	{Name: "file.pe.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "file.pe.sections.name", DataType: "keyword", Description: "PE Section List name."},
	{Name: "file.pe.sections.physical_size", DataType: "long", Description: "PE Section List physical size."},
	{Name: "file.pe.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "file.pe.sections.virtual_size", DataType: "long", Description: "PE Section List virtual size. This is always the same as `physical_size`."},
	{Name: "host.name", DataType: "keyword", Description: "Name of the host.\nIt can contain what hostname returns on Unix systems, the fully qualified domain name (FQDN), or a name specified by the user. The recommended value is the lowercase FQDN of the host."},
	{Name: "process.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "process.elf.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "process.elf.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "process.elf.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "process.elf.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "process.elf.import_hash", DataType: "keyword", Description: "A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash."},
	{Name: "process.elf.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.elf.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.elf.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "process.macho.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "process.macho.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "process.macho.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "process.macho.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "process.macho.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "process.macho.import_hash", DataType: "keyword", Description: "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash."},
	{Name: "process.macho.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "process.macho.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.macho.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.macho.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`."},
	{Name: "process.macho.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "process.macho.sections.name", DataType: "keyword", Description: "Mach-O Section List name."},
	{Name: "process.macho.sections.physical_size", DataType: "long", Description: "Mach-O Section List physical size."},
	{Name: "process.macho.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "process.macho.sections.virtual_size", DataType: "long", Description: "Mach-O Section List virtual size. This is always the same as `physical_size`."},
	{Name: "process.macho.symhash", DataType: "keyword", Description: "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash"},
	{Name: "process.parent.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "process.parent.elf.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "process.parent.elf.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "process.parent.elf.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "process.parent.elf.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "process.parent.elf.import_hash", DataType: "keyword", Description: "A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash."},
	{Name: "process.parent.elf.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.parent.elf.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.parent.elf.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "process.parent.macho.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "process.parent.macho.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "process.parent.macho.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "process.parent.macho.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "process.parent.macho.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "process.parent.macho.import_hash", DataType: "keyword", Description: "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash."},
	{Name: "process.parent.macho.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "process.parent.macho.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.parent.macho.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.parent.macho.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`."},
	{Name: "process.parent.macho.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "process.parent.macho.sections.name", DataType: "keyword", Description: "Mach-O Section List name."},
	{Name: "process.parent.macho.sections.physical_size", DataType: "long", Description: "Mach-O Section List physical size."},
	{Name: "process.parent.macho.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "process.parent.macho.sections.virtual_size", DataType: "long", Description: "Mach-O Section List virtual size. This is always the same as `physical_size`."},
	{Name: "process.parent.macho.symhash", DataType: "keyword", Description: "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash"},
	{Name: "process.parent.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "process.parent.pe.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "process.parent.pe.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "process.parent.pe.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "process.parent.pe.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "process.parent.pe.import_hash", DataType: "keyword", Description: "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash."},
	{Name: "process.parent.pe.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "process.parent.pe.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.parent.pe.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.parent.pe.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`."},
	{Name: "process.parent.pe.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "process.parent.pe.sections.name", DataType: "keyword", Description: "PE Section List name."},
	{Name: "process.parent.pe.sections.physical_size", DataType: "long", Description: "PE Section List physical size."},
	{Name: "process.parent.pe.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "process.parent.pe.sections.virtual_size", DataType: "long", Description: "PE Section List virtual size. This is always the same as `physical_size`."},
	{Name: "process.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "process.pe.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "process.pe.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "process.pe.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "process.pe.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "process.pe.import_hash", DataType: "keyword", Description: "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash."},
	{Name: "process.pe.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "process.pe.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.pe.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "process.pe.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`."},
	{Name: "process.pe.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "process.pe.sections.name", DataType: "keyword", Description: "PE Section List name."},
	{Name: "process.pe.sections.physical_size", DataType: "long", Description: "PE Section List physical size."},
	{Name: "process.pe.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "process.pe.sections.virtual_size", DataType: "long", Description: "PE Section List virtual size. This is always the same as `physical_size`."},
	{Name: "threat.enrichments.indicator.file.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "threat.enrichments.indicator.file.elf.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "threat.enrichments.indicator.file.elf.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.enrichments.indicator.file.elf.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.enrichments.indicator.file.elf.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "threat.enrichments.indicator.file.elf.import_hash", DataType: "keyword", Description: "A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash."},
	{Name: "threat.enrichments.indicator.file.elf.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.enrichments.indicator.file.elf.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.enrichments.indicator.file.elf.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "threat.enrichments.indicator.file.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "threat.enrichments.indicator.file.pe.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "threat.enrichments.indicator.file.pe.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.enrichments.indicator.file.pe.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.enrichments.indicator.file.pe.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "threat.enrichments.indicator.file.pe.import_hash", DataType: "keyword", Description: "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash."},
	{Name: "threat.enrichments.indicator.file.pe.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "threat.enrichments.indicator.file.pe.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.enrichments.indicator.file.pe.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.enrichments.indicator.file.pe.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`."},
	{Name: "threat.enrichments.indicator.file.pe.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "threat.enrichments.indicator.file.pe.sections.name", DataType: "keyword", Description: "PE Section List name."},
	{Name: "threat.enrichments.indicator.file.pe.sections.physical_size", DataType: "long", Description: "PE Section List physical size."},
	{Name: "threat.enrichments.indicator.file.pe.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "threat.enrichments.indicator.file.pe.sections.virtual_size", DataType: "long", Description: "PE Section List virtual size. This is always the same as `physical_size`."},
	{Name: "threat.enrichments.indicator.name", DataType: "keyword", Pattern: "(?:00:00:5e:00:53:af|13335|2a02:cf40:add:4002:91f2:a9b2:e09a:6fc6|373d34874d7bc89fd4cefa6272ee80bf|5.2.75.227|8008|HKLM\\\\SOFTWARE\\\\Microsoft\\\\Active|b0e914d1bbe19433cc9df64ea1ca07fe77f7b150b511b786e46e007941a62bd7|email@example.com|example.com|https://example.com/some/path)", Description: "The display name indicator in an UI friendly format"},
	{Name: "threat.indicator.file.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "threat.indicator.file.elf.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "threat.indicator.file.elf.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.indicator.file.elf.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.indicator.file.elf.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "threat.indicator.file.elf.import_hash", DataType: "keyword", Description: "A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash."},
	{Name: "threat.indicator.file.elf.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.indicator.file.elf.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.indicator.file.elf.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "threat.indicator.file.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma)."},
	{Name: "threat.indicator.file.pe.go_imports", DataType: "flattened", Description: "List of imported Go language element names and types."},
	{Name: "threat.indicator.file.pe.go_imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.indicator.file.pe.go_imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of Go imports."},
	{Name: "threat.indicator.file.pe.go_stripped", DataType: "boolean", Description: "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable."},
	{Name: "threat.indicator.file.pe.import_hash", DataType: "keyword", Description: "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash."},
	{Name: "threat.indicator.file.pe.imports", DataType: "flattened", Array: true, Description: "List of imported element names and types."},
	{Name: "threat.indicator.file.pe.imports_names_entropy", DataType: "long", Description: "Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.indicator.file.pe.imports_names_var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the list of imported element names and types."},
	{Name: "threat.indicator.file.pe.sections", DataType: "nested", Array: true, Description: "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`."},
	{Name: "threat.indicator.file.pe.sections.entropy", DataType: "long", Description: "Shannon entropy calculation from the section."},
	{Name: "threat.indicator.file.pe.sections.name", DataType: "keyword", Description: "PE Section List name."},
	{Name: "threat.indicator.file.pe.sections.physical_size", DataType: "long", Description: "PE Section List physical size."},
	{Name: "threat.indicator.file.pe.sections.var_entropy", DataType: "long", Description: "Variance for Shannon entropy calculation from the section."},
	{Name: "threat.indicator.file.pe.sections.virtual_size", DataType: "long", Description: "PE Section List virtual size. This is always the same as `physical_size`."},
	{Name: "threat.indicator.name", DataType: "keyword", Pattern: "(?:00:00:5e:00:53:af|13335|2a02:cf40:add:4002:91f2:a9b2:e09a:6fc6|373d34874d7bc89fd4cefa6272ee80bf|5.2.75.227|8008|HKLM\\\\SOFTWARE\\\\Microsoft\\\\Active|b0e914d1bbe19433cc9df64ea1ca07fe77f7b150b511b786e46e007941a62bd7|email@example.com|example.com|https://example.com/some/path)", Description: "The display name indicator in an UI friendly format"},
	// ECS v8.8.0
	{Name: "device.id", DataType: "keyword", Description: "The unique identifier of a device. The identifier must not change across application sessions but stay fixed for an instance of a (mobile) device. \nOn iOS, this value must be equal to the vendor identifier (https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android, this value must be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application.\nFor GDPR and data protection law reasons this identifier should not carry information that would allow to identify a user."},
	{Name: "event.kind", DataType: "keyword", Pattern: "(?:alert|asset|enrichment|event|metric|pipeline_error|signal|state)", Description: "This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.\n`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.\nThe value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not."},
	{Name: "orchestrator.resource.annotation", DataType: "keyword", Array: true, Description: "The list of annotations added to the resource."},
	{Name: "orchestrator.resource.label", DataType: "keyword", Array: true, Description: "The list of labels added to the resource."},
	// ECS v8.9.0
	{Name: "event.created", DataType: "date", Description: "`event.created` contains the date/time when the event was first read by an agent, or by your pipeline.\nThis field is distinct from `@timestamp` in that `@timestamp` typically contain the time extracted from the original event.\nIn most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.\nIn case the two timestamps are identical, `@timestamp` should be used."},
	{Name: "event.duration", DataType: "long", Description: "Duration of the event in nanoseconds.\nIf `event.start` and `event.end` are known this value should be the difference between the end and start time."},
	{Name: "event.end", DataType: "date", Description: "`event.end` contains the date when the event ended or when the activity was last observed."},
	{Name: "event.kind", DataType: "keyword", Pattern: "(?:alert|asset|enrichment|event|metric|pipeline_error|signal|state)", Description: "This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.\n`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.\nThe value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data is coming in at a regular interval or not."},
	{Name: "event.start", DataType: "date", Description: "`event.start` contains the date when the event started or when the activity was first observed."},
	{Name: "process.entry_leader.parent.session_leader.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.entry_leader.parent.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.entry_leader.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.group_leader.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.parent.group_leader.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.parent.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.session_leader.parent.session_leader.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.session_leader.parent.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.session_leader.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	{Name: "process.vpid", DataType: "long", Description: "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within."},
	// ECS v8.10.0
	{Name: "container.security_context.privileged", DataType: "boolean", Description: "Indicates whether the container is running in privileged mode."},
	{Name: "process.parent.thread.capabilities.effective", DataType: "keyword", Array: true, Pattern: "^(CAP_[A-Z_]+|\\d+)$", Description: "This is the set of capabilities used by the kernel to perform permission checks for the thread."},
	{Name: "process.parent.thread.capabilities.permitted", DataType: "keyword", Array: true, Pattern: "^(CAP_[A-Z_]+|\\d+)$", Description: "This is a limiting superset for the effective capabilities that the thread may assume."},
	{Name: "process.thread.capabilities.effective", DataType: "keyword", Array: true, Pattern: "^(CAP_[A-Z_]+|\\d+)$", Description: "This is the set of capabilities used by the kernel to perform permission checks for the thread."},
	{Name: "process.thread.capabilities.permitted", DataType: "keyword", Array: true, Pattern: "^(CAP_[A-Z_]+|\\d+)$", Description: "This is a limiting superset for the effective capabilities that the thread may assume."},
	// ECS v8.11.0
	{Name: "threat.enrichments.indicator.name", DataType: "keyword", Description: "The display name indicator in an UI friendly format\nURL, IP address, email address, registry key, port number, hash value, or other relevant name can serve as the display name."},
	{Name: "threat.indicator.name", DataType: "keyword", Description: "The display name indicator in an UI friendly format\nURL, IP address, email address, registry key, port number, hash value, or other relevant name can serve as the display name."},
	// ECS v8.16.0
	{Name: "device.id", DataType: "keyword", Description: "The unique identifier of a device. The identifier must not change across application sessions but stay fixed for an instance of a (mobile) device.\nOn iOS, this value must be equal to the vendor identifier (https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android, this value must be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application.\nFor GDPR and data protection law reasons this identifier should not carry information that would allow to identify a user."},
	{Name: "device.serial_number", DataType: "keyword", Description: "The unique serial number serves as a distinct identifier for each device, aiding in inventory management and device authentication."},
	{Name: "dll.code_signature.flags", DataType: "keyword", Description: "The flags used to sign the process."},
	{Name: "dll.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "email.attachments.file.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "file.code_signature.flags", DataType: "keyword", Description: "The flags used to sign the process."},
	{Name: "file.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "process.code_signature.flags", DataType: "keyword", Description: "The flags used to sign the process."},
	{Name: "process.group.id", DataType: "keyword", Description: "Unique identifier for the group on the system/platform."},
	{Name: "process.group.name", DataType: "keyword", Description: "Name of the group."},
	{Name: "process.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "process.parent.code_signature.flags", DataType: "keyword", Description: "The flags used to sign the process."},
	{Name: "process.parent.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "threat.enrichments.indicator.file.code_signature.flags", DataType: "keyword", Description: "The flags used to sign the process."},
	{Name: "threat.enrichments.indicator.file.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "threat.enrichments.indicator.file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.enrichments.indicator.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.indicator.file.code_signature.flags", DataType: "keyword", Description: "The flags used to sign the process."},
	{Name: "threat.indicator.file.hash.cdhash", DataType: "keyword", Description: "Code directory hash, utilized to uniquely identify and authenticate the integrity of the executable code."},
	{Name: "threat.indicator.file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.indicator.id", DataType: "keyword", Array: true, Description: "The ID of the indicator used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. This field can have multiple values to allow for the identification of the same indicator across systems that use different ID formats.\nWhile not required, a common approach is to use a STIX 2.x indicator ID."},
	{Name: "threat.indicator.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "tls.client.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "tls.server.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this should be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "volume.bus_type", DataType: "keyword", Description: "Bus type of the device, such as `Nvme`, `Usb`, or `FileBackedVirtual`."},
	{Name: "volume.default_access", DataType: "keyword", Description: "Describes the default access(es) of the volume."},
	{Name: "volume.device_name", DataType: "keyword", Description: "Full path of the volume device.\nOnly populate this field for POSIX system volumes."},
	{Name: "volume.device_type", DataType: "keyword", Description: "Volume device type.\nThe most frequently seen volume device types are `Disk File System` and `CD-ROM File System`."},
	{Name: "volume.dos_name", DataType: "keyword", Description: "The MS-DOS name of a device.\nDOS device name is in the format of driver letters, such as `C:`. The field is relevant to Windows systems only."},
	{Name: "volume.file_system_type", DataType: "keyword", Description: "Volume device file system type.\nThe most common volume file system types are `NTFS` and `UDF`."},
	{Name: "volume.mount_name", DataType: "keyword", Description: "Mount name of the volume device.\nOnly populate this field for POSIX system volumes."},
	{Name: "volume.nt_name", DataType: "keyword", Description: "The NT device name.\nNT device name uses a format of `\\Device\\HarddiskVolume2`. The field is relevant to Windows systems only."},
	{Name: "volume.product_id", DataType: "keyword", Description: "ProductID of the device.\nThe vendor provides the ProductID for the volume, if any."},
	{Name: "volume.product_name", DataType: "keyword", Description: "Product name of the volume.\nThe volume device vendor provides this value."},
	{Name: "volume.removable", DataType: "boolean", Description: "Indicates if the volume is removable."},
	{Name: "volume.serial_number", DataType: "keyword", Description: "Serial number identifier for the volume device.\nThe serial number is provided by the vendor of the device, if any."},
	{Name: "volume.size", DataType: "long", Description: "Size of the volume device in bytes."},
	{Name: "volume.vendor_id", DataType: "keyword", Description: "VendorID of the volume device.\nThe volume device vendor provides this value."},
	{Name: "volume.vendor_name", DataType: "keyword", Description: "Vendor name of the volume device.\nThe value is provided by the vendor of the device."},
	{Name: "volume.writable", DataType: "boolean", Description: "Indicates if the volume is writable."},
	{Name: "vulnerability.id", DataType: "keyword", Description: "The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id[Common Vulnerabilities and Exposure CVE ID])"},
	// ECS v8.17.0
	{Name: "client.registered_domain", DataType: "keyword", Description: "The highest registered client domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "client.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "destination.registered_domain", DataType: "keyword", Description: "The highest registered destination domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "destination.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "dll.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "dns.question.registered_domain", DataType: "keyword", Description: "The highest registered domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "dns.question.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "file.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "file.macho.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "file.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "process.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "process.macho.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "process.parent.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "process.parent.macho.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "process.parent.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "process.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "server.registered_domain", DataType: "keyword", Description: "The highest registered server domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "server.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "source.registered_domain", DataType: "keyword", Description: "The highest registered source domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "source.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "threat.enrichments.indicator.file.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "threat.enrichments.indicator.file.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "threat.enrichments.indicator.url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "threat.enrichments.indicator.url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "threat.indicator.file.elf.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "threat.indicator.file.pe.go_import_hash", DataType: "keyword", Description: "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available here: https://github.com/elastic/toutoumomoma"},
	{Name: "threat.indicator.url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "threat.indicator.url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "url.registered_domain", DataType: "keyword", Description: "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\"."},
	{Name: "url.top_level_domain", DataType: "keyword", Description: "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (https://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\"."},
	{Name: "vulnerability.category", DataType: "keyword", Array: true, Description: "The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm)\nThis field must be an array."},
	// ECS v9.0.0
	{Name: "dll.origin_referrer_url", DataType: "keyword", Description: "The URL of the webpage that linked to the dll file."},
	{Name: "dll.origin_url", DataType: "keyword", Description: "The URL where the dll file is hosted."},
	{Name: "file.mime_type", DataType: "keyword", Description: "MIME type should identify the format of the file or stream of bytes using IANA official types: https://www.iana.org/assignments/media-types/media-types.xhtml, where possible. When more than one type is applicable, the most specific type should be used."},
	{Name: "file.origin_referrer_url", DataType: "keyword", Description: "The URL of the webpage that linked to the file."},
	{Name: "file.origin_url", DataType: "keyword", Description: "The URL where the file is hosted."},
	{Name: "file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.enrichments.indicator.file.mime_type", DataType: "keyword", Description: "MIME type should identify the format of the file or stream of bytes using IANA official types: https://www.iana.org/assignments/media-types/media-types.xhtml, where possible. When more than one type is applicable, the most specific type should be used."},
	{Name: "threat.enrichments.indicator.file.origin_referrer_url", DataType: "keyword", Description: "The URL of the webpage that linked to the file."},
	{Name: "threat.enrichments.indicator.file.origin_url", DataType: "keyword", Description: "The URL where the file is hosted."},
	{Name: "threat.enrichments.indicator.file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.enrichments.indicator.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.indicator.file.mime_type", DataType: "keyword", Description: "MIME type should identify the format of the file or stream of bytes using IANA official types: https://www.iana.org/assignments/media-types/media-types.xhtml, where possible. When more than one type is applicable, the most specific type should be used."},
	{Name: "threat.indicator.file.origin_referrer_url", DataType: "keyword", Description: "The URL of the webpage that linked to the file."},
	{Name: "threat.indicator.file.origin_url", DataType: "keyword", Description: "The URL where the file is hosted."},
	{Name: "threat.indicator.file.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "threat.indicator.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "tls.client.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	{Name: "tls.server.x509.serial_number", DataType: "keyword", Description: "Unique serial number issued by the certificate authority. For consistency, this must be encoded in base 16 and formatted without colons and uppercase characters."},
	// ECS v9.1.0
	{Name: "dll.code_signature.thumbprint_sha256", DataType: "keyword", Pattern: "^[0-9a-f]{64}$", Description: "Certificate SHA256 hash that uniquely identifies the code signer."},
	{Name: "file.code_signature.thumbprint_sha256", DataType: "keyword", Pattern: "^[0-9a-f]{64}$", Description: "Certificate SHA256 hash that uniquely identifies the code signer."},
	{Name: "gen_ai.agent.description", DataType: "keyword", Description: "Free-form description of the GenAI agent provided by the application."},
	{Name: "gen_ai.agent.id", DataType: "keyword", Description: "The unique identifier of the GenAI agent."},
	{Name: "gen_ai.agent.name", DataType: "keyword", Description: "Human-readable name of the GenAI agent provided by the application."},
	{Name: "gen_ai.operation.name", DataType: "keyword", Description: "The name of the operation being performed."},
	{Name: "gen_ai.output.type", DataType: "keyword", Description: "Represents the content type requested by the client."},
	{Name: "gen_ai.request.choice.count", DataType: "integer", Description: "The target number of candidate completions to return."},
	{Name: "gen_ai.request.encoding_formats", DataType: "nested", Description: "The encoding formats requested in an embeddings operation, if specified."},
	{Name: "gen_ai.request.frequency_penalty", DataType: "double", Description: "The frequency penalty setting for the GenAI request."},
	{Name: "gen_ai.request.max_tokens", DataType: "integer", Description: "The maximum number of tokens the model generates for a request."},
	{Name: "gen_ai.request.model", DataType: "keyword", Description: "The name of the GenAI model a request is being made to."},
	{Name: "gen_ai.request.presence_penalty", DataType: "double", Description: "The presence penalty setting for the GenAI request."},
	{Name: "gen_ai.request.seed", DataType: "integer", Description: "Requests with same seed value more likely to return same result."},
	{Name: "gen_ai.request.stop_sequences", DataType: "nested", Description: "List of sequences that the model will use to stop generating further tokens."},
	{Name: "gen_ai.request.temperature", DataType: "double", Description: "The temperature setting for the GenAI request."},
	{Name: "gen_ai.request.top_k", DataType: "double", Description: "The top_k sampling setting for the GenAI request."},
	{Name: "gen_ai.request.top_p", DataType: "double", Description: "The top_p sampling setting for the GenAI request."},
	{Name: "gen_ai.response.finish_reasons", DataType: "nested", Description: "Array of reasons the model stopped generating tokens, corresponding to each generation received."},
	{Name: "gen_ai.response.id", DataType: "keyword", Description: "The unique identifier for the completion."},
	{Name: "gen_ai.response.model", DataType: "keyword", Description: "The name of the model that generated the response."},
	{Name: "gen_ai.system", DataType: "keyword", Description: "The Generative AI product as identified by the client or server instrumentation."},
	{Name: "gen_ai.token.type", DataType: "keyword", Description: "The type of token being counted."},
	{Name: "gen_ai.tool.call.id", DataType: "keyword", Description: "The tool call identifier."},
	{Name: "gen_ai.tool.name", DataType: "keyword", Description: "Name of the tool utilized by the agent."},
	{Name: "gen_ai.tool.type", DataType: "keyword", Description: "Type of the tool utilized by the agent"},
	{Name: "gen_ai.usage.input_tokens", DataType: "integer", Description: "The number of tokens used in the GenAI input (prompt)."},
	{Name: "gen_ai.usage.output_tokens", DataType: "integer", Description: "The number of tokens used in the GenAI response (completion)."},
	{Name: "process.code_signature.thumbprint_sha256", DataType: "keyword", Pattern: "^[0-9a-f]{64}$", Description: "Certificate SHA256 hash that uniquely identifies the code signer."},
	{Name: "process.parent.code_signature.thumbprint_sha256", DataType: "keyword", Pattern: "^[0-9a-f]{64}$", Description: "Certificate SHA256 hash that uniquely identifies the code signer."},
	{Name: "threat.enrichments.indicator.file.code_signature.thumbprint_sha256", DataType: "keyword", Pattern: "^[0-9a-f]{64}$", Description: "Certificate SHA256 hash that uniquely identifies the code signer."},
	{Name: "threat.indicator.file.code_signature.thumbprint_sha256", DataType: "keyword", Pattern: "^[0-9a-f]{64}$", Description: "Certificate SHA256 hash that uniquely identifies the code signer."},
	// ECS v9.2.0
	{Name: "cloud.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "cloud.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "cloud.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "cloud.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "cloud.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "cloud.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "cloud.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "cloud.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "cloud.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "cloud.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "cloud.origin.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.origin.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.origin.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "cloud.origin.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "cloud.origin.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "cloud.origin.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.origin.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "cloud.origin.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "cloud.origin.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "cloud.origin.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "cloud.origin.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "cloud.origin.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "cloud.origin.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "cloud.target.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.target.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.target.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "cloud.target.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "cloud.target.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "cloud.target.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "cloud.target.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "cloud.target.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "cloud.target.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "cloud.target.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "cloud.target.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "cloud.target.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "cloud.target.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "device.product.id", DataType: "keyword", Description: "A unique identifier assigned by the vendor to distinguish different product models. This is typically a hexadecimal value that, combined with the vendor ID, creates a globally unique device identifier.\nThe product ID is assigned by the device manufacturer and should remain consistent across all instances of the same product model. For hardware devices, this often corresponds to the Product ID (PID) in device descriptors.\nSee https://learn.microsoft.com/en-us/windows-hardware/drivers/install/standard-usb-identifiers for more details on product identification standards."},
	{Name: "device.product.name", DataType: "keyword", Description: "The human-readable marketing or commercial name of the device as designated by the manufacturer. This name is typically found in product documentation, marketing materials, or device packaging.\nUnlike the product.id which is a technical identifier, this field contains the consumer-facing product name that would be recognizable to end users. The name should be exactly as provided by the manufacturer and may include model numbers, series designations, or other identifying information."},
	{Name: "device.type", DataType: "keyword", Description: "A classification of the device based on its primary function or device class. This field categorizes devices into functional groups to enable policy enforcement and monitoring based on device capabilities.\nThe classification should follow standard device class definitions where possible, such as \"Storage Device\", \"Human Interface Device\", \"Audio\", \"Video\", \"Network\", \"Communication\", etc. This allows for consistent categorization across different device types and manufacturers.\nSee https://www.usb.org/defined-class-codes for standard device class definitions."},
	{Name: "device.vendor.id", DataType: "keyword", Description: "A unique identifier assigned to device manufacturers by standards organizations. This is typically a hexadecimal value that uniquely identifies the vendor/manufacturer of the device.\nThe vendor ID is assigned by standards bodies and remains consistent across all products from the same manufacturer. For hardware devices, this often corresponds to the Vendor ID (VID) in device descriptors. This identifier enables tracking and policy enforcement at the manufacturer level.\nSee https://learn.microsoft.com/en-us/windows-hardware/drivers/install/standard-usb-identifiers for more information on vendor identification standards."},
	{Name: "device.vendor.name", DataType: "keyword", Description: "The name of the organization or company that manufactured or produced the device. This should be the official registered business name or commonly recognized brand name of the manufacturer.\nThe vendor name provides human-readable identification of the device manufacturer and should be consistent with the vendor.id field. This field is useful for reporting, device inventory management, and applying vendor-specific policies or security rules."},
	{Name: "event.type", DataType: "keyword", Array: true, Pattern: "(?:access|admin|allowed|change|connection|creation|deletion|denied|device|end|error|group|indicator|info|installation|protocol|start|user)", Description: "This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.\n`event.type` represents a categorization \"sub-bucket\" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.\nThis field is an array. This will allow proper categorization of some events that fall in multiple event types."},
	{Name: "host.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "host.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "host.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "host.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "host.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "host.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "host.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "host.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "host.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "host.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "host.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "host.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "host.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "orchestrator.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "orchestrator.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "orchestrator.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "orchestrator.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "orchestrator.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "orchestrator.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "orchestrator.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "orchestrator.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "orchestrator.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "orchestrator.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "orchestrator.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "orchestrator.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "orchestrator.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "service.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "service.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "service.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "service.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "service.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "service.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "service.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "service.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "service.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "service.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "service.origin.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.origin.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.origin.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "service.origin.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "service.origin.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "service.origin.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.origin.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "service.origin.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "service.origin.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "service.origin.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "service.origin.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "service.origin.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "service.origin.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "service.target.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.target.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.target.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "service.target.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "service.target.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "service.target.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "service.target.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "service.target.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "service.target.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "service.target.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "service.target.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "service.target.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "service.target.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "user.changes.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.changes.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.changes.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "user.changes.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "user.changes.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "user.changes.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.changes.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "user.changes.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "user.changes.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "user.changes.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "user.changes.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "user.changes.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "user.changes.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "user.changes.risk.calculated_level", DataType: "keyword", Description: "A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.changes.risk.calculated_score", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.changes.risk.calculated_score_norm", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100."},
	{Name: "user.changes.risk.static_level", DataType: "keyword", Description: "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.changes.risk.static_score", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.changes.risk.static_score_norm", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100."},
	{Name: "user.effective.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.effective.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.effective.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "user.effective.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "user.effective.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "user.effective.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.effective.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "user.effective.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "user.effective.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "user.effective.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "user.effective.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "user.effective.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "user.effective.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "user.effective.risk.calculated_level", DataType: "keyword", Description: "A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.effective.risk.calculated_score", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.effective.risk.calculated_score_norm", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100."},
	{Name: "user.effective.risk.static_level", DataType: "keyword", Description: "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.effective.risk.static_score", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.effective.risk.static_score_norm", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100."},
	{Name: "user.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "user.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "user.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "user.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "user.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "user.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "user.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "user.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "user.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "user.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "user.target.entity.attributes", DataType: "object", Description: "A set of static or semi-static attributes of the entity. Usually boolean or keyword field data types. Use this field set when you need to track static or semi-static characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.target.entity.behavior", DataType: "object", Description: "A set of ephemeral characteristics of the entity, derived from observed behaviors during a specific time period. Usually boolean field data type. Use this field set when you need to capture and track ephemeral characteristics of an entity for advanced searching, correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.target.entity.display_name", DataType: "keyword", Description: "An optional field used when a pretty name is desired for entity-centric operations. This field should not be used for correlation with `*.name` fields for entities with dedicated field sets (e.g., `host`)."},
	{Name: "user.target.entity.id", DataType: "keyword", Description: "A unique identifier for the entity. When multiple identifiers exist, this should be the most stable and commonly used identifier that: 1) persists across the entity's lifecycle, 2) ensures uniqueness within its scope, 3) is commonly used for queries and correlation, and 4) is readily available in most observations (logs/events). For entities with dedicated field sets (e.g., host, user), this value should match the corresponding *.id field. Alternative identifiers (e.g., ARNs values in AWS, URLs) can be preserved in the raw field."},
	{Name: "user.target.entity.last_seen_timestamp", DataType: "date", Description: "Indicates the date/time when this entity was last \"seen,\" usually based upon the last event/log that is initiated by this entity."},
	{Name: "user.target.entity.lifecycle", DataType: "object", Description: "A set of temporal characteristics of the entity. Usually date field data type. Use this field set when you need to track temporal characteristics of an entity for advanced searching and correlation of normalized values across different providers/sources and entity types."},
	{Name: "user.target.entity.metrics", DataType: "object", Description: "Field set for any fields containing numeric entity metrics. These use dynamic field data type mapping."},
	{Name: "user.target.entity.name", DataType: "keyword", Description: "The name of the entity. The keyword field enables exact matches for filtering and aggregations, while the text field enables full-text search. For entities with dedicated field sets (e.g., `host`), this field should mirrors the corresponding *.name value."},
	{Name: "user.target.entity.raw", DataType: "object", Description: "Original, unmodified fields from the source system. Usually flattened field data type. While the attributes field should be used for normalized fields requiring advanced queries, this field preserves all source metadata with basic search capabilities."},
	{Name: "user.target.entity.reference", DataType: "keyword", Description: "A URI, URL, or other direct reference to access or locate the entity in its source system. This could be an API endpoint, web console URL, or other addressable location. Format may vary by entity type and source system."},
	{Name: "user.target.entity.source", DataType: "keyword", Description: "The module or integration that provided this entity data (similar to event.module)."},
	{Name: "user.target.entity.sub_type", DataType: "keyword", Description: "The specific type designation for the entity as defined by its provider or system. This field provides more granular classification than the type field. Examples: `aws_s3_bucket`, `gcp_cloud_storage_bucket`, `azure_blob_container` would all map to entity type `bucket`.  `hardware` , `virtual` , `container` , `node` , `cloud_instance` would all map to entity type `host`."},
	{Name: "user.target.entity.type", DataType: "keyword", Array: true, Pattern: "(?:application|bucket|container|database|function|host|queue|service|session|user)", Description: "A standardized high-level classification of the entity. This provides a normalized way to group similar entities across different providers or systems. Example values: `bucket`, `database`, `container`, `function`, `queue`, `host`, `user`, `application`, `session`, etc."},
	{Name: "user.target.risk.calculated_level", DataType: "keyword", Description: "A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.target.risk.calculated_score", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring."},
	{Name: "user.target.risk.calculated_score_norm", DataType: "float", Description: "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100."},
	{Name: "user.target.risk.static_level", DataType: "keyword", Description: "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.target.risk.static_score", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform."},
	{Name: "user.target.risk.static_score_norm", DataType: "float", Description: "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100."},
}
